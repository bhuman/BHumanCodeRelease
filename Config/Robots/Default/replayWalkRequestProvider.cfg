motionRequests = [
  {
    description = WalkForwardLong_Delay;
    isLeftPhaseStart = true;
    walkRequests = [
      {
        walkKickStep = {
          keyframe = [];
          longKickParams = [];
          increaseSwingHeightFactor = 1;
          reduceSwingFootHeight = 0;
          numOfBalanceSteps = 0;
          useSlowSupportFootHeightAfterKickInterpolation = false;
          useSlowSwingFootHeightInterpolation = 0;
          overrideOldSwingFoot = none;
          overrideOldSupportFoot = none;
          currentKick = none;
          useLastKeyframeForSupportFootXTranslation = false;
          usedWalkDelay = false;
          currentKickVariant = [];
          lastStepInfo = {
            nextIsLeftPhase = false;
            wasLastPhaseLeftPhase = false;
            wasLastPhaseInWalkKick = false;
            leftStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            rightStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            lastExecutedStep = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
          };
          isReplayWalkRequest = true;
        };
        isWalkKickPhase = false;
        step = {
          rotation = 0.662025deg;
          translation = {x = 12.9429; y = 26.2643;};
        };
        delay = 0;
      },
      {
        walkKickStep = {
          keyframe = [];
          longKickParams = [];
          increaseSwingHeightFactor = 1;
          reduceSwingFootHeight = 0;
          numOfBalanceSteps = 0;
          useSlowSupportFootHeightAfterKickInterpolation = false;
          useSlowSwingFootHeightInterpolation = 0;
          overrideOldSwingFoot = none;
          overrideOldSupportFoot = none;
          currentKick = none;
          useLastKeyframeForSupportFootXTranslation = false;
          usedWalkDelay = false;
          currentKickVariant = [];
          lastStepInfo = {
            nextIsLeftPhase = false;
            wasLastPhaseLeftPhase = false;
            wasLastPhaseInWalkKick = false;
            leftStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            rightStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            lastExecutedStep = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
          };
          isReplayWalkRequest = true;
        };
        isWalkKickPhase = false;
        step = {
          rotation = 0deg;
          translation = {x = 24; y = 0;};
        };
        delay = 0;
      },
      {
        walkKickStep = {
          keyframe = [];
          longKickParams = [];
          increaseSwingHeightFactor = 1;
          reduceSwingFootHeight = 0;
          numOfBalanceSteps = 0;
          useSlowSupportFootHeightAfterKickInterpolation = false;
          useSlowSwingFootHeightInterpolation = 0;
          overrideOldSwingFoot = none;
          overrideOldSupportFoot = none;
          currentKick = none;
          useLastKeyframeForSupportFootXTranslation = false;
          usedWalkDelay = false;
          currentKickVariant = [];
          lastStepInfo = {
            nextIsLeftPhase = false;
            wasLastPhaseLeftPhase = false;
            wasLastPhaseInWalkKick = false;
            leftStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            rightStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            lastExecutedStep = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
          };
          isReplayWalkRequest = true;
        };
        isWalkKickPhase = false;
        step = {
          rotation = 2.40329deg;
          translation = {x = 50.2479; y = 28.5824;};
        };
        delay = 0;
      },
      {
        walkKickStep = {
          keyframe = [];
          longKickParams = [];
          increaseSwingHeightFactor = 1;
          reduceSwingFootHeight = 0;
          numOfBalanceSteps = 0;
          useSlowSupportFootHeightAfterKickInterpolation = false;
          useSlowSwingFootHeightInterpolation = 0;
          overrideOldSwingFoot = none;
          overrideOldSupportFoot = none;
          currentKick = none;
          useLastKeyframeForSupportFootXTranslation = false;
          usedWalkDelay = false;
          currentKickVariant = [];
          lastStepInfo = {
            nextIsLeftPhase = false;
            wasLastPhaseLeftPhase = false;
            wasLastPhaseInWalkKick = false;
            leftStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            rightStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            lastExecutedStep = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
          };
          isReplayWalkRequest = true;
        };
        isWalkKickPhase = false;
        step = {
          rotation = 0.73325deg;
          translation = {x = 73.93; y = 0;};
        };
        delay = 0;
      },
      {
        walkKickStep = {
          keyframe = [];
          longKickParams = [];
          increaseSwingHeightFactor = 1;
          reduceSwingFootHeight = 0;
          numOfBalanceSteps = 0;
          useSlowSupportFootHeightAfterKickInterpolation = false;
          useSlowSwingFootHeightInterpolation = 0;
          overrideOldSwingFoot = none;
          overrideOldSupportFoot = none;
          currentKick = none;
          useLastKeyframeForSupportFootXTranslation = false;
          usedWalkDelay = false;
          currentKickVariant = [];
          lastStepInfo = {
            nextIsLeftPhase = false;
            wasLastPhaseLeftPhase = false;
            wasLastPhaseInWalkKick = false;
            leftStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            rightStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            lastExecutedStep = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
          };
          isReplayWalkRequest = true;
        };
        isWalkKickPhase = false;
        step = {
          rotation = 3.43066deg;
          translation = {x = 73.4675; y = 29.8052;};
        };
        delay = 0;
      },
      {
        walkKickStep = {
          keyframe = [];
          longKickParams = [];
          increaseSwingHeightFactor = 1;
          reduceSwingFootHeight = 0;
          numOfBalanceSteps = 0;
          useSlowSupportFootHeightAfterKickInterpolation = false;
          useSlowSwingFootHeightInterpolation = 0;
          overrideOldSwingFoot = none;
          overrideOldSupportFoot = none;
          currentKick = none;
          useLastKeyframeForSupportFootXTranslation = false;
          usedWalkDelay = false;
          currentKickVariant = [];
          lastStepInfo = {
            nextIsLeftPhase = false;
            wasLastPhaseLeftPhase = false;
            wasLastPhaseInWalkKick = false;
            leftStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            rightStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            lastExecutedStep = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
          };
          isReplayWalkRequest = true;
        };
        isWalkKickPhase = false;
        step = {
          rotation = 0deg;
          translation = {x = 75; y = 0;};
        };
        delay = 0;
      },
      {
        walkKickStep = {
          keyframe = [];
          longKickParams = [];
          increaseSwingHeightFactor = 1;
          reduceSwingFootHeight = 0;
          numOfBalanceSteps = 0;
          useSlowSupportFootHeightAfterKickInterpolation = false;
          useSlowSwingFootHeightInterpolation = 0;
          overrideOldSwingFoot = none;
          overrideOldSupportFoot = none;
          currentKick = none;
          useLastKeyframeForSupportFootXTranslation = false;
          usedWalkDelay = false;
          currentKickVariant = [];
          lastStepInfo = {
            nextIsLeftPhase = false;
            wasLastPhaseLeftPhase = false;
            wasLastPhaseInWalkKick = false;
            leftStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            rightStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            lastExecutedStep = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
          };
          isReplayWalkRequest = true;
        };
        isWalkKickPhase = false;
        step = {
          rotation = 3.39848deg;
          translation = {x = 73.4961; y = 29.7688;};
        };
        delay = 0;
      },
      {
        walkKickStep = {
          keyframe = [];
          longKickParams = [];
          increaseSwingHeightFactor = 1;
          reduceSwingFootHeight = 0;
          numOfBalanceSteps = 0;
          useSlowSupportFootHeightAfterKickInterpolation = false;
          useSlowSwingFootHeightInterpolation = 0;
          overrideOldSwingFoot = none;
          overrideOldSupportFoot = none;
          currentKick = none;
          useLastKeyframeForSupportFootXTranslation = false;
          usedWalkDelay = false;
          currentKickVariant = [];
          lastStepInfo = {
            nextIsLeftPhase = false;
            wasLastPhaseLeftPhase = false;
            wasLastPhaseInWalkKick = false;
            leftStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            rightStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            lastExecutedStep = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
          };
          isReplayWalkRequest = true;
        };
        isWalkKickPhase = false;
        step = {
          rotation = 0deg;
          translation = {x = 75; y = 0;};
        };
        delay = 0;
      },
      {
        walkKickStep = {
          keyframe = [];
          longKickParams = [];
          increaseSwingHeightFactor = 1;
          reduceSwingFootHeight = 0;
          numOfBalanceSteps = 0;
          useSlowSupportFootHeightAfterKickInterpolation = false;
          useSlowSwingFootHeightInterpolation = 0;
          overrideOldSwingFoot = none;
          overrideOldSupportFoot = none;
          currentKick = none;
          useLastKeyframeForSupportFootXTranslation = false;
          usedWalkDelay = false;
          currentKickVariant = [];
          lastStepInfo = {
            nextIsLeftPhase = false;
            wasLastPhaseLeftPhase = false;
            wasLastPhaseInWalkKick = false;
            leftStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            rightStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            lastExecutedStep = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
          };
          isReplayWalkRequest = true;
        };
        isWalkKickPhase = false;
        step = {
          rotation = -6.50293deg;
          translation = {x = 69.4937; y = 34.0059;};
        };
        delay = 0;
      },
      {
        walkKickStep = {
          keyframe = [];
          longKickParams = [];
          increaseSwingHeightFactor = 1;
          reduceSwingFootHeight = 0;
          numOfBalanceSteps = 0;
          useSlowSupportFootHeightAfterKickInterpolation = false;
          useSlowSwingFootHeightInterpolation = 0;
          overrideOldSwingFoot = none;
          overrideOldSupportFoot = none;
          currentKick = none;
          useLastKeyframeForSupportFootXTranslation = false;
          usedWalkDelay = false;
          currentKickVariant = [];
          lastStepInfo = {
            nextIsLeftPhase = false;
            wasLastPhaseLeftPhase = false;
            wasLastPhaseInWalkKick = false;
            leftStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            rightStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            lastExecutedStep = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
          };
          isReplayWalkRequest = true;
        };
        isWalkKickPhase = false;
        step = {
          rotation = -16.1161deg;
          translation = {x = 41.1813; y = 0;};
        };
        delay = 0;
      },
      {
        walkKickStep = {
          keyframe = [];
          longKickParams = [];
          increaseSwingHeightFactor = 1;
          reduceSwingFootHeight = 0;
          numOfBalanceSteps = 0;
          useSlowSupportFootHeightAfterKickInterpolation = false;
          useSlowSwingFootHeightInterpolation = 0;
          overrideOldSwingFoot = none;
          overrideOldSupportFoot = none;
          currentKick = none;
          useLastKeyframeForSupportFootXTranslation = false;
          usedWalkDelay = false;
          currentKickVariant = [];
          lastStepInfo = {
            nextIsLeftPhase = false;
            wasLastPhaseLeftPhase = false;
            wasLastPhaseInWalkKick = false;
            leftStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            rightStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            lastExecutedStep = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
          };
          isReplayWalkRequest = true;
        };
        isWalkKickPhase = false;
        step = {
          rotation = 0.628486deg;
          translation = {x = 24.24; y = 50.268;};
        };
        delay = 0;
      },
      {
        walkKickStep = {
          keyframe = [];
          longKickParams = [];
          increaseSwingHeightFactor = 1;
          reduceSwingFootHeight = 0;
          numOfBalanceSteps = 0;
          useSlowSupportFootHeightAfterKickInterpolation = false;
          useSlowSwingFootHeightInterpolation = 0;
          overrideOldSwingFoot = none;
          overrideOldSupportFoot = none;
          currentKick = none;
          useLastKeyframeForSupportFootXTranslation = false;
          usedWalkDelay = false;
          currentKickVariant = [];
          lastStepInfo = {
            nextIsLeftPhase = false;
            wasLastPhaseLeftPhase = false;
            wasLastPhaseInWalkKick = false;
            leftStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            rightStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            lastExecutedStep = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
          };
          isReplayWalkRequest = true;
        };
        isWalkKickPhase = false;
        step = {
          rotation = -2.88512deg;
          translation = {x = 12.5903; y = 0;};
        };
        delay = 0;
      },
      {
        walkKickStep = {
          keyframe = [];
          longKickParams = [];
          increaseSwingHeightFactor = 1;
          reduceSwingFootHeight = 0;
          numOfBalanceSteps = 0;
          useSlowSupportFootHeightAfterKickInterpolation = false;
          useSlowSwingFootHeightInterpolation = 0;
          overrideOldSwingFoot = none;
          overrideOldSupportFoot = none;
          currentKick = none;
          useLastKeyframeForSupportFootXTranslation = false;
          usedWalkDelay = false;
          currentKickVariant = [];
          lastStepInfo = {
            nextIsLeftPhase = false;
            wasLastPhaseLeftPhase = false;
            wasLastPhaseInWalkKick = false;
            leftStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            rightStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            lastExecutedStep = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
          };
          isReplayWalkRequest = true;
        };
        isWalkKickPhase = false;
        step = {
          rotation = 0.301952deg;
          translation = {x = -0.4189; y = 8.19819;};
        };
        delay = 0;
      },
      {
        walkKickStep = {
          keyframe = [
            {
              stepTarget = {
                rotation = -0.198717deg;
                translation = {x = 2.83423; y = -7.62939e-06;};
              };
              stepTargetSwing = {
                rotation = -0.198717deg;
                translation = {x = 2.83423; y = -7.62939e-06;};
              };
              stepTargetConverted = {
                rotation = -0.198717deg;
                translation = {x = 2.83422; y = 0.00505829;};
              };
              stepTargetSwingConverted = {
                rotation = -0.198717deg;
                translation = {x = 2.83422; y = 0.00505829;};
              };
              stepRatio = 0.997571;
              speedUpSwing = {x = 1; y = 1;};
              holdXSwingTarget = false;
              holdXSupportTarget = false;
              reachedWaitPosition = false;
              interpolationType = cosineZeroToMax;
            },
            {
              stepTarget = {
                rotation = -0.198717deg;
                translation = {x = 2.83423; y = -7.62939e-06;};
              };
              stepTargetSwing = {
                rotation = -0.198717deg;
                translation = {x = 2.83423; y = -7.62939e-06;};
              };
              stepTargetConverted = {
                rotation = -0.198717deg;
                translation = {x = 2.83422; y = 0.00505829;};
              };
              stepTargetSwingConverted = {
                rotation = -0.198717deg;
                translation = {x = 2.83422; y = 0.00505829;};
              };
              stepRatio = 0.00242921;
              speedUpSwing = {x = 1; y = 1;};
              holdXSwingTarget = false;
              holdXSupportTarget = false;
              reachedWaitPosition = false;
              interpolationType = sinusMaxToZero;
            }
          ];
          longKickParams = [];
          increaseSwingHeightFactor = 1;
          reduceSwingFootHeight = 0;
          numOfBalanceSteps = 0;
          useSlowSupportFootHeightAfterKickInterpolation = false;
          useSlowSwingFootHeightInterpolation = 0;
          overrideOldSwingFoot = none;
          overrideOldSupportFoot = none;
          currentKick = forwardLong;
          useLastKeyframeForSupportFootXTranslation = false;
          usedWalkDelay = false;
          currentKickVariant = [];
          lastStepInfo = {
            nextIsLeftPhase = false;
            wasLastPhaseLeftPhase = false;
            wasLastPhaseInWalkKick = false;
            leftStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            rightStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            lastExecutedStep = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
          };
          isReplayWalkRequest = true;
        };
        isWalkKickPhase = true;
        step = {
          rotation = -0.198717deg;
          translation = {x = 2.83423; y = -7.62939e-06;};
        };
        delay = 0;
      },
      {
        walkKickStep = {
          keyframe = [
            {
              stepTarget = {
                rotation = 0.102222deg;
                translation = {x = -2.83423; y = 0.290668;};
              };
              stepTargetSwing = {
                rotation = 0.102222deg;
                translation = {x = -2.83423; y = 0.290668;};
              };
              stepTargetConverted = {
                rotation = 0.102222deg;
                translation = {x = -2.83397; y = 0.293156;};
              };
              stepTargetSwingConverted = {
                rotation = 0.102222deg;
                translation = {x = -2.83397; y = 0.293156;};
              };
              stepRatio = 0.25;
              speedUpSwing = {x = 1; y = 1;};
              holdXSwingTarget = false;
              holdXSupportTarget = false;
              reachedWaitPosition = false;
              interpolationType = cosineZeroToMax;
            },
            {
              stepTarget = {
                rotation = 0.102222deg;
                translation = {x = 40; y = 0.754732;};
              };
              stepTargetSwing = {
                rotation = 0.102222deg;
                translation = {x = 40; y = 0.754732;};
              };
              stepTargetConverted = {
                rotation = 0.102222deg;
                translation = {x = 40.0007; y = 0.719006;};
              };
              stepTargetSwingConverted = {
                rotation = 0.102222deg;
                translation = {x = 40.0007; y = 0.719006;};
              };
              stepRatio = 0.4;
              speedUpSwing = {x = 1; y = 1;};
              holdXSwingTarget = false;
              holdXSupportTarget = false;
              reachedWaitPosition = false;
              interpolationType = linear;
            },
            {
              stepTarget = {
                rotation = 0.102222deg;
                translation = {x = 40; y = 0.890993;};
              };
              stepTargetSwing = {
                rotation = 0.102222deg;
                translation = {x = 60; y = 0.926675;};
              };
              stepTargetConverted = {
                rotation = 0.102222deg;
                translation = {x = 40.0008; y = 0.855267;};
              };
              stepTargetSwingConverted = {
                rotation = 0.102222deg;
                translation = {x = 60.0008; y = 0.873108;};
              };
              stepRatio = 0.35;
              speedUpSwing = {x = 1; y = 1;};
              holdXSwingTarget = false;
              holdXSupportTarget = false;
              reachedWaitPosition = false;
              interpolationType = linear;
            }
          ];
          longKickParams = [
            {
              joint = lHipPitch;
              offset = -15deg;
              minRatio = 0.25;
              middleRatio = 0.65;
              maxRatio = 1;
              minimumRatio = 0.25;
              shiftByKeyFrame = -1;
            },
            {
              joint = lAnklePitch;
              offset = 10deg;
              minRatio = 0.4;
              middleRatio = 0.65;
              maxRatio = 1.2;
              minimumRatio = 0.5;
              shiftByKeyFrame = -1;
            },
            {
              joint = lKneePitch;
              offset = -10deg;
              minRatio = 0.5;
              middleRatio = 0.65;
              maxRatio = 0.85;
              minimumRatio = 0.5;
              shiftByKeyFrame = -1;
            },
            {
              joint = rHipPitch;
              offset = -4deg;
              minRatio = 0.25;
              middleRatio = 1;
              maxRatio = 1.75;
              minimumRatio = 0.25;
              shiftByKeyFrame = -1;
            },
            {
              joint = lAnklePitch;
              offset = 0deg;
              minRatio = 0;
              middleRatio = 0.5;
              maxRatio = 0.75;
              minimumRatio = 0;
              shiftByKeyFrame = -1;
            }
          ];
          increaseSwingHeightFactor = 1;
          reduceSwingFootHeight = 3;
          numOfBalanceSteps = 1;
          useSlowSupportFootHeightAfterKickInterpolation = true;
          useSlowSwingFootHeightInterpolation = 240;
          overrideOldSwingFoot = measured;
          overrideOldSupportFoot = request;
          currentKick = forwardLong;
          useLastKeyframeForSupportFootXTranslation = false;
          usedWalkDelay = false;
          currentKickVariant = [];
          lastStepInfo = {
            nextIsLeftPhase = false;
            wasLastPhaseLeftPhase = false;
            wasLastPhaseInWalkKick = false;
            leftStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            rightStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            lastExecutedStep = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
          };
          isReplayWalkRequest = true;
        };
        isWalkKickPhase = true;
        step = {
          rotation = 0.102222deg;
          translation = {x = 40; y = 0.890993;};
        };
        delay = 0.1;
      },
      {
        walkKickStep = {
          keyframe = [];
          longKickParams = [];
          increaseSwingHeightFactor = 1;
          reduceSwingFootHeight = 0;
          numOfBalanceSteps = 0;
          useSlowSupportFootHeightAfterKickInterpolation = false;
          useSlowSwingFootHeightInterpolation = 0;
          overrideOldSwingFoot = none;
          overrideOldSupportFoot = none;
          currentKick = none;
          useLastKeyframeForSupportFootXTranslation = false;
          usedWalkDelay = false;
          currentKickVariant = [];
          lastStepInfo = {
            nextIsLeftPhase = false;
            wasLastPhaseLeftPhase = false;
            wasLastPhaseInWalkKick = false;
            leftStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            rightStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            lastExecutedStep = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
          };
          isReplayWalkRequest = true;
        };
        isWalkKickPhase = false;
        step = {
          rotation = 0deg;
          translation = {x = 1; y = 0;};
        };
        delay = 0;
      },
      {
        walkKickStep = {
          keyframe = [];
          longKickParams = [];
          increaseSwingHeightFactor = 1;
          reduceSwingFootHeight = 0;
          numOfBalanceSteps = 0;
          useSlowSupportFootHeightAfterKickInterpolation = false;
          useSlowSwingFootHeightInterpolation = 0;
          overrideOldSwingFoot = none;
          overrideOldSupportFoot = none;
          currentKick = none;
          useLastKeyframeForSupportFootXTranslation = false;
          usedWalkDelay = false;
          currentKickVariant = [];
          lastStepInfo = {
            nextIsLeftPhase = false;
            wasLastPhaseLeftPhase = false;
            wasLastPhaseInWalkKick = false;
            leftStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            rightStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            lastExecutedStep = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
          };
          isReplayWalkRequest = true;
        };
        isWalkKickPhase = false;
        step = {
          rotation = 0deg;
          translation = {x = 1; y = 0;};
        };
        delay = 0;
      }
    ];
  },
  {
    description = SideWalkGore;
    isLeftPhaseStart = false;
    walkRequests = [
      {
        walkKickStep = {
          keyframe = [];
          longKickParams = [];
          increaseSwingHeightFactor = 1;
          reduceSwingFootHeight = 0;
          numOfBalanceSteps = 0;
          useSlowSupportFootHeightAfterKickInterpolation = false;
          useSlowSwingFootHeightInterpolation = 0;
          overrideOldSwingFoot = none;
          overrideOldSupportFoot = none;
          currentKick = none;
          useLastKeyframeForSupportFootXTranslation = false;
          usedWalkDelay = false;
          currentKickVariant = [];
          lastStepInfo = {
            nextIsLeftPhase = false;
            wasLastPhaseLeftPhase = false;
            wasLastPhaseInWalkKick = false;
            leftStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            rightStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            lastExecutedStep = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
          };
          isReplayWalkRequest = true;
        };
        isWalkKickPhase = false;
        step = {
          rotation = 1.69312deg;
          translation = {x = 0; y = -12.2427;};
        };
        delay = 0;
      },
      {
        walkKickStep = {
          keyframe = [];
          longKickParams = [];
          increaseSwingHeightFactor = 1;
          reduceSwingFootHeight = 0;
          numOfBalanceSteps = 0;
          useSlowSupportFootHeightAfterKickInterpolation = false;
          useSlowSwingFootHeightInterpolation = 0;
          overrideOldSwingFoot = none;
          overrideOldSupportFoot = none;
          currentKick = none;
          useLastKeyframeForSupportFootXTranslation = false;
          usedWalkDelay = false;
          currentKickVariant = [];
          lastStepInfo = {
            nextIsLeftPhase = false;
            wasLastPhaseLeftPhase = false;
            wasLastPhaseInWalkKick = false;
            leftStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            rightStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            lastExecutedStep = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
          };
          isReplayWalkRequest = true;
        };
        isWalkKickPhase = false;
        step = {
          rotation = -16.5deg;
          translation = {x = 12.5; y = 0;};
        };
        delay = 0;
      },
      {
        walkKickStep = {
          keyframe = [];
          longKickParams = [];
          increaseSwingHeightFactor = 1;
          reduceSwingFootHeight = 0;
          numOfBalanceSteps = 0;
          useSlowSupportFootHeightAfterKickInterpolation = false;
          useSlowSwingFootHeightInterpolation = 0;
          overrideOldSwingFoot = none;
          overrideOldSupportFoot = none;
          currentKick = none;
          useLastKeyframeForSupportFootXTranslation = false;
          usedWalkDelay = false;
          currentKickVariant = [];
          lastStepInfo = {
            nextIsLeftPhase = false;
            wasLastPhaseLeftPhase = false;
            wasLastPhaseInWalkKick = false;
            leftStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            rightStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            lastExecutedStep = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
          };
          isReplayWalkRequest = true;
        };
        isWalkKickPhase = false;
        step = {
          rotation = -5.38896deg;
          translation = {x = 31.25; y = -46.2963;};
        };
        delay = 0;
      },
      {
        walkKickStep = {
          keyframe = [];
          longKickParams = [];
          increaseSwingHeightFactor = 1;
          reduceSwingFootHeight = 0;
          numOfBalanceSteps = 0;
          useSlowSupportFootHeightAfterKickInterpolation = false;
          useSlowSwingFootHeightInterpolation = 0;
          overrideOldSwingFoot = none;
          overrideOldSupportFoot = none;
          currentKick = none;
          useLastKeyframeForSupportFootXTranslation = false;
          usedWalkDelay = false;
          currentKickVariant = [];
          lastStepInfo = {
            nextIsLeftPhase = false;
            wasLastPhaseLeftPhase = false;
            wasLastPhaseInWalkKick = false;
            leftStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            rightStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            lastExecutedStep = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
          };
          isReplayWalkRequest = true;
        };
        isWalkKickPhase = false;
        step = {
          rotation = -0.786573deg;
          translation = {x = 50; y = 0;};
        };
        delay = 0;
      },
      {
        walkKickStep = {
          keyframe = [];
          longKickParams = [];
          increaseSwingHeightFactor = 1;
          reduceSwingFootHeight = 0;
          numOfBalanceSteps = 0;
          useSlowSupportFootHeightAfterKickInterpolation = false;
          useSlowSwingFootHeightInterpolation = 0;
          overrideOldSwingFoot = none;
          overrideOldSupportFoot = none;
          currentKick = none;
          useLastKeyframeForSupportFootXTranslation = false;
          usedWalkDelay = false;
          currentKickVariant = [];
          lastStepInfo = {
            nextIsLeftPhase = false;
            wasLastPhaseLeftPhase = false;
            wasLastPhaseInWalkKick = false;
            leftStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            rightStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            lastExecutedStep = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
          };
          isReplayWalkRequest = true;
        };
        isWalkKickPhase = false;
        step = {
          rotation = -6.50993deg;
          translation = {x = 57.9016; y = -17.6551;};
        };
        delay = 0;
      },
      {
        walkKickStep = {
          keyframe = [];
          longKickParams = [];
          increaseSwingHeightFactor = 1;
          reduceSwingFootHeight = 0;
          numOfBalanceSteps = 0;
          useSlowSupportFootHeightAfterKickInterpolation = false;
          useSlowSwingFootHeightInterpolation = 0;
          overrideOldSwingFoot = none;
          overrideOldSupportFoot = none;
          currentKick = none;
          useLastKeyframeForSupportFootXTranslation = false;
          usedWalkDelay = false;
          currentKickVariant = [];
          lastStepInfo = {
            nextIsLeftPhase = false;
            wasLastPhaseLeftPhase = false;
            wasLastPhaseInWalkKick = false;
            leftStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            rightStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            lastExecutedStep = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
          };
          isReplayWalkRequest = true;
        };
        isWalkKickPhase = false;
        step = {
          rotation = 0deg;
          translation = {x = 62.5; y = 0;};
        };
        delay = 0;
      },
      {
        walkKickStep = {
          keyframe = [];
          longKickParams = [];
          increaseSwingHeightFactor = 1;
          reduceSwingFootHeight = 0;
          numOfBalanceSteps = 0;
          useSlowSupportFootHeightAfterKickInterpolation = false;
          useSlowSwingFootHeightInterpolation = 0;
          overrideOldSwingFoot = none;
          overrideOldSupportFoot = none;
          currentKick = none;
          useLastKeyframeForSupportFootXTranslation = false;
          usedWalkDelay = false;
          currentKickVariant = [];
          lastStepInfo = {
            nextIsLeftPhase = false;
            wasLastPhaseLeftPhase = false;
            wasLastPhaseInWalkKick = false;
            leftStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            rightStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            lastExecutedStep = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
          };
          isReplayWalkRequest = true;
        };
        isWalkKickPhase = false;
        step = {
          rotation = 0deg;
          translation = {x = 62.5; y = -7.54237;};
        };
        delay = 0;
      },
      {
        walkKickStep = {
          keyframe = [];
          longKickParams = [];
          increaseSwingHeightFactor = 1;
          reduceSwingFootHeight = 0;
          numOfBalanceSteps = 0;
          useSlowSupportFootHeightAfterKickInterpolation = false;
          useSlowSwingFootHeightInterpolation = 0;
          overrideOldSwingFoot = none;
          overrideOldSupportFoot = none;
          currentKick = none;
          useLastKeyframeForSupportFootXTranslation = false;
          usedWalkDelay = false;
          currentKickVariant = [];
          lastStepInfo = {
            nextIsLeftPhase = false;
            wasLastPhaseLeftPhase = false;
            wasLastPhaseInWalkKick = false;
            leftStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            rightStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            lastExecutedStep = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
          };
          isReplayWalkRequest = true;
        };
        isWalkKickPhase = false;
        step = {
          rotation = 0deg;
          translation = {x = 62.5; y = 0;};
        };
        delay = 0;
      },
      {
        walkKickStep = {
          keyframe = [];
          longKickParams = [];
          increaseSwingHeightFactor = 1;
          reduceSwingFootHeight = 0;
          numOfBalanceSteps = 0;
          useSlowSupportFootHeightAfterKickInterpolation = false;
          useSlowSwingFootHeightInterpolation = 0;
          overrideOldSwingFoot = none;
          overrideOldSupportFoot = none;
          currentKick = none;
          useLastKeyframeForSupportFootXTranslation = false;
          usedWalkDelay = false;
          currentKickVariant = [];
          lastStepInfo = {
            nextIsLeftPhase = false;
            wasLastPhaseLeftPhase = false;
            wasLastPhaseInWalkKick = false;
            leftStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            rightStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            lastExecutedStep = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
          };
          isReplayWalkRequest = true;
        };
        isWalkKickPhase = false;
        step = {
          rotation = 0deg;
          translation = {x = 62.5; y = -6.67592;};
        };
        delay = 0;
      },
      {
        walkKickStep = {
          keyframe = [];
          longKickParams = [];
          increaseSwingHeightFactor = 1;
          reduceSwingFootHeight = 0;
          numOfBalanceSteps = 0;
          useSlowSupportFootHeightAfterKickInterpolation = false;
          useSlowSwingFootHeightInterpolation = 0;
          overrideOldSwingFoot = none;
          overrideOldSupportFoot = none;
          currentKick = none;
          useLastKeyframeForSupportFootXTranslation = false;
          usedWalkDelay = false;
          currentKickVariant = [];
          lastStepInfo = {
            nextIsLeftPhase = false;
            wasLastPhaseLeftPhase = false;
            wasLastPhaseInWalkKick = false;
            leftStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            rightStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            lastExecutedStep = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
          };
          isReplayWalkRequest = true;
        };
        isWalkKickPhase = false;
        step = {
          rotation = 0deg;
          translation = {x = 62.5; y = 0;};
        };
        delay = 0;
      },
      {
        walkKickStep = {
          keyframe = [];
          longKickParams = [];
          increaseSwingHeightFactor = 1;
          reduceSwingFootHeight = 0;
          numOfBalanceSteps = 0;
          useSlowSupportFootHeightAfterKickInterpolation = false;
          useSlowSwingFootHeightInterpolation = 0;
          overrideOldSwingFoot = none;
          overrideOldSupportFoot = none;
          currentKick = none;
          useLastKeyframeForSupportFootXTranslation = false;
          usedWalkDelay = false;
          currentKickVariant = [];
          lastStepInfo = {
            nextIsLeftPhase = false;
            wasLastPhaseLeftPhase = false;
            wasLastPhaseInWalkKick = false;
            leftStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            rightStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            lastExecutedStep = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
          };
          isReplayWalkRequest = true;
        };
        isWalkKickPhase = false;
        step = {
          rotation = 0deg;
          translation = {x = 62.5; y = -92.5926;};
        };
        delay = 0;
      },
      {
        walkKickStep = {
          keyframe = [];
          longKickParams = [];
          increaseSwingHeightFactor = 1;
          reduceSwingFootHeight = 0;
          numOfBalanceSteps = 0;
          useSlowSupportFootHeightAfterKickInterpolation = false;
          useSlowSwingFootHeightInterpolation = 0;
          overrideOldSwingFoot = none;
          overrideOldSupportFoot = none;
          currentKick = none;
          useLastKeyframeForSupportFootXTranslation = false;
          usedWalkDelay = false;
          currentKickVariant = [];
          lastStepInfo = {
            nextIsLeftPhase = false;
            wasLastPhaseLeftPhase = false;
            wasLastPhaseInWalkKick = false;
            leftStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            rightStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            lastExecutedStep = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
          };
          isReplayWalkRequest = true;
        };
        isWalkKickPhase = false;
        step = {
          rotation = 0deg;
          translation = {x = 62.5; y = 0;};
        };
        delay = 0;
      },
      {
        walkKickStep = {
          keyframe = [];
          longKickParams = [];
          increaseSwingHeightFactor = 1;
          reduceSwingFootHeight = 0;
          numOfBalanceSteps = 0;
          useSlowSupportFootHeightAfterKickInterpolation = false;
          useSlowSwingFootHeightInterpolation = 0;
          overrideOldSwingFoot = none;
          overrideOldSupportFoot = none;
          currentKick = none;
          useLastKeyframeForSupportFootXTranslation = false;
          usedWalkDelay = false;
          currentKickVariant = [];
          lastStepInfo = {
            nextIsLeftPhase = false;
            wasLastPhaseLeftPhase = false;
            wasLastPhaseInWalkKick = false;
            leftStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            rightStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            lastExecutedStep = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
          };
          isReplayWalkRequest = true;
        };
        isWalkKickPhase = false;
        step = {
          rotation = 0deg;
          translation = {x = 62.5; y = 0;};
        };
        delay = 0;
      },
      {
        walkKickStep = {
          keyframe = [];
          longKickParams = [];
          increaseSwingHeightFactor = 1;
          reduceSwingFootHeight = 0;
          numOfBalanceSteps = 0;
          useSlowSupportFootHeightAfterKickInterpolation = false;
          useSlowSwingFootHeightInterpolation = 0;
          overrideOldSwingFoot = none;
          overrideOldSupportFoot = none;
          currentKick = none;
          useLastKeyframeForSupportFootXTranslation = false;
          usedWalkDelay = false;
          currentKickVariant = [];
          lastStepInfo = {
            nextIsLeftPhase = false;
            wasLastPhaseLeftPhase = false;
            wasLastPhaseInWalkKick = false;
            leftStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            rightStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            lastExecutedStep = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
          };
          isReplayWalkRequest = true;
        };
        isWalkKickPhase = false;
        step = {
          rotation = -1.25089deg;
          translation = {x = 62.3302; y = 0;};
        };
        delay = 0;
      },
      {
        walkKickStep = {
          keyframe = [];
          longKickParams = [];
          increaseSwingHeightFactor = 1;
          reduceSwingFootHeight = 0;
          numOfBalanceSteps = 0;
          useSlowSupportFootHeightAfterKickInterpolation = false;
          useSlowSwingFootHeightInterpolation = 0;
          overrideOldSwingFoot = none;
          overrideOldSupportFoot = none;
          currentKick = none;
          useLastKeyframeForSupportFootXTranslation = false;
          usedWalkDelay = false;
          currentKickVariant = [];
          lastStepInfo = {
            nextIsLeftPhase = false;
            wasLastPhaseLeftPhase = false;
            wasLastPhaseInWalkKick = false;
            leftStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            rightStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            lastExecutedStep = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
          };
          isReplayWalkRequest = true;
        };
        isWalkKickPhase = false;
        step = {
          rotation = 0deg;
          translation = {x = 62.5; y = 0;};
        };
        delay = 0;
      },
      {
        walkKickStep = {
          keyframe = [];
          longKickParams = [];
          increaseSwingHeightFactor = 1;
          reduceSwingFootHeight = 0;
          numOfBalanceSteps = 0;
          useSlowSupportFootHeightAfterKickInterpolation = false;
          useSlowSwingFootHeightInterpolation = 0;
          overrideOldSwingFoot = none;
          overrideOldSupportFoot = none;
          currentKick = none;
          useLastKeyframeForSupportFootXTranslation = false;
          usedWalkDelay = false;
          currentKickVariant = [];
          lastStepInfo = {
            nextIsLeftPhase = false;
            wasLastPhaseLeftPhase = false;
            wasLastPhaseInWalkKick = false;
            leftStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            rightStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            lastExecutedStep = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
          };
          isReplayWalkRequest = true;
        };
        isWalkKickPhase = false;
        step = {
          rotation = 0deg;
          translation = {x = 62.5; y = 14.3368;};
        };
        delay = 0;
      },
      {
        walkKickStep = {
          keyframe = [];
          longKickParams = [];
          increaseSwingHeightFactor = 1;
          reduceSwingFootHeight = 0;
          numOfBalanceSteps = 0;
          useSlowSupportFootHeightAfterKickInterpolation = false;
          useSlowSwingFootHeightInterpolation = 0;
          overrideOldSwingFoot = none;
          overrideOldSupportFoot = none;
          currentKick = none;
          useLastKeyframeForSupportFootXTranslation = false;
          usedWalkDelay = false;
          currentKickVariant = [];
          lastStepInfo = {
            nextIsLeftPhase = false;
            wasLastPhaseLeftPhase = false;
            wasLastPhaseInWalkKick = false;
            leftStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            rightStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            lastExecutedStep = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
          };
          isReplayWalkRequest = true;
        };
        isWalkKickPhase = false;
        step = {
          rotation = -2.24202deg;
          translation = {x = 61.9546; y = -91.7846;};
        };
        delay = 0;
      },
      {
        walkKickStep = {
          keyframe = [];
          longKickParams = [];
          increaseSwingHeightFactor = 1;
          reduceSwingFootHeight = 0;
          numOfBalanceSteps = 0;
          useSlowSupportFootHeightAfterKickInterpolation = false;
          useSlowSwingFootHeightInterpolation = 0;
          overrideOldSwingFoot = none;
          overrideOldSupportFoot = none;
          currentKick = none;
          useLastKeyframeForSupportFootXTranslation = false;
          usedWalkDelay = false;
          currentKickVariant = [];
          lastStepInfo = {
            nextIsLeftPhase = false;
            wasLastPhaseLeftPhase = false;
            wasLastPhaseInWalkKick = false;
            leftStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            rightStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            lastExecutedStep = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
          };
          isReplayWalkRequest = true;
        };
        isWalkKickPhase = false;
        step = {
          rotation = -5.44954deg;
          translation = {x = 59.2776; y = 0;};
        };
        delay = 0;
      },
      {
        walkKickStep = {
          keyframe = [];
          longKickParams = [];
          increaseSwingHeightFactor = 1;
          reduceSwingFootHeight = 0;
          numOfBalanceSteps = 0;
          useSlowSupportFootHeightAfterKickInterpolation = false;
          useSlowSwingFootHeightInterpolation = 0;
          overrideOldSwingFoot = none;
          overrideOldSupportFoot = none;
          currentKick = none;
          useLastKeyframeForSupportFootXTranslation = false;
          usedWalkDelay = false;
          currentKickVariant = [];
          lastStepInfo = {
            nextIsLeftPhase = false;
            wasLastPhaseLeftPhase = false;
            wasLastPhaseInWalkKick = false;
            leftStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            rightStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            lastExecutedStep = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
          };
          isReplayWalkRequest = true;
        };
        isWalkKickPhase = false;
        step = {
          rotation = -9.96862deg;
          translation = {x = 51.7173; y = -40.3463;};
        };
        delay = 0;
      },
      {
        walkKickStep = {
          keyframe = [];
          longKickParams = [];
          increaseSwingHeightFactor = 1;
          reduceSwingFootHeight = 0;
          numOfBalanceSteps = 0;
          useSlowSupportFootHeightAfterKickInterpolation = false;
          useSlowSwingFootHeightInterpolation = 0;
          overrideOldSwingFoot = none;
          overrideOldSupportFoot = none;
          currentKick = none;
          useLastKeyframeForSupportFootXTranslation = false;
          usedWalkDelay = false;
          currentKickVariant = [];
          lastStepInfo = {
            nextIsLeftPhase = false;
            wasLastPhaseLeftPhase = false;
            wasLastPhaseInWalkKick = false;
            leftStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            rightStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            lastExecutedStep = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
          };
          isReplayWalkRequest = true;
        };
        isWalkKickPhase = false;
        step = {
          rotation = 0deg;
          translation = {x = 62.5; y = 0;};
        };
        delay = 0;
      },
      {
        walkKickStep = {
          keyframe = [];
          longKickParams = [];
          increaseSwingHeightFactor = 1;
          reduceSwingFootHeight = 0;
          numOfBalanceSteps = 0;
          useSlowSupportFootHeightAfterKickInterpolation = false;
          useSlowSwingFootHeightInterpolation = 0;
          overrideOldSwingFoot = none;
          overrideOldSupportFoot = none;
          currentKick = none;
          useLastKeyframeForSupportFootXTranslation = false;
          usedWalkDelay = false;
          currentKickVariant = [];
          lastStepInfo = {
            nextIsLeftPhase = false;
            wasLastPhaseLeftPhase = false;
            wasLastPhaseInWalkKick = false;
            leftStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            rightStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            lastExecutedStep = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
          };
          isReplayWalkRequest = true;
        };
        isWalkKickPhase = false;
        step = {
          rotation = 0deg;
          translation = {x = 62.5; y = -21.76;};
        };
        delay = 0;
      },
      {
        walkKickStep = {
          keyframe = [];
          longKickParams = [];
          increaseSwingHeightFactor = 1;
          reduceSwingFootHeight = 0;
          numOfBalanceSteps = 0;
          useSlowSupportFootHeightAfterKickInterpolation = false;
          useSlowSwingFootHeightInterpolation = 0;
          overrideOldSwingFoot = none;
          overrideOldSupportFoot = none;
          currentKick = none;
          useLastKeyframeForSupportFootXTranslation = false;
          usedWalkDelay = false;
          currentKickVariant = [];
          lastStepInfo = {
            nextIsLeftPhase = false;
            wasLastPhaseLeftPhase = false;
            wasLastPhaseInWalkKick = false;
            leftStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            rightStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            lastExecutedStep = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
          };
          isReplayWalkRequest = true;
        };
        isWalkKickPhase = false;
        step = {
          rotation = 0deg;
          translation = {x = 55; y = 0;};
        };
        delay = 0;
      }
    ];
  },
  {
    description = Side_Walk_Fail;
    isLeftPhaseStart = true;
    walkRequests = [
      {
        walkKickStep = {
          keyframe = [];
          longKickParams = [];
          increaseSwingHeightFactor = 1;
          reduceSwingFootHeight = 0;
          numOfBalanceSteps = 0;
          useSlowSupportFootHeightAfterKickInterpolation = false;
          useSlowSwingFootHeightInterpolation = 0;
          overrideOldSwingFoot = none;
          overrideOldSupportFoot = none;
          currentKick = none;
          useLastKeyframeForSupportFootXTranslation = false;
          usedWalkDelay = false;
          currentKickVariant = [];
          lastStepInfo = {
            nextIsLeftPhase = false;
            wasLastPhaseLeftPhase = false;
            wasLastPhaseInWalkKick = false;
            leftStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            rightStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            lastExecutedStep = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
          };
          isReplayWalkRequest = true;
        };
        isWalkKickPhase = false;
        step = {
          rotation = 0.88485deg;
          translation = {x = 12.37; y = 12.7473;};
        };
        delay = 0;
      },
      {
        walkKickStep = {
          keyframe = [];
          longKickParams = [];
          increaseSwingHeightFactor = 1;
          reduceSwingFootHeight = 0;
          numOfBalanceSteps = 0;
          useSlowSupportFootHeightAfterKickInterpolation = false;
          useSlowSwingFootHeightInterpolation = 0;
          overrideOldSwingFoot = none;
          overrideOldSupportFoot = none;
          currentKick = none;
          useLastKeyframeForSupportFootXTranslation = false;
          usedWalkDelay = false;
          currentKickVariant = [];
          lastStepInfo = {
            nextIsLeftPhase = false;
            wasLastPhaseLeftPhase = false;
            wasLastPhaseInWalkKick = false;
            leftStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            rightStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            lastExecutedStep = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
          };
          isReplayWalkRequest = true;
        };
        isWalkKickPhase = false;
        step = {
          rotation = 0deg;
          translation = {x = 30.2211; y = -6.34886;};
        };
        delay = 0;
      },
      {
        walkKickStep = {
          keyframe = [];
          longKickParams = [];
          increaseSwingHeightFactor = 1;
          reduceSwingFootHeight = 0;
          numOfBalanceSteps = 0;
          useSlowSupportFootHeightAfterKickInterpolation = false;
          useSlowSwingFootHeightInterpolation = 0;
          overrideOldSwingFoot = none;
          overrideOldSupportFoot = none;
          currentKick = none;
          useLastKeyframeForSupportFootXTranslation = false;
          usedWalkDelay = false;
          currentKickVariant = [];
          lastStepInfo = {
            nextIsLeftPhase = false;
            wasLastPhaseLeftPhase = false;
            wasLastPhaseInWalkKick = false;
            leftStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            rightStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            lastExecutedStep = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
          };
          isReplayWalkRequest = true;
        };
        isWalkKickPhase = false;
        step = {
          rotation = 0deg;
          translation = {x = 50.2871; y = 48.7189;};
        };
        delay = 0;
      },
      {
        walkKickStep = {
          keyframe = [];
          longKickParams = [];
          increaseSwingHeightFactor = 1;
          reduceSwingFootHeight = 0;
          numOfBalanceSteps = 0;
          useSlowSupportFootHeightAfterKickInterpolation = false;
          useSlowSwingFootHeightInterpolation = 0;
          overrideOldSwingFoot = none;
          overrideOldSupportFoot = none;
          currentKick = none;
          useLastKeyframeForSupportFootXTranslation = false;
          usedWalkDelay = false;
          currentKickVariant = [];
          lastStepInfo = {
            nextIsLeftPhase = false;
            wasLastPhaseLeftPhase = false;
            wasLastPhaseInWalkKick = false;
            leftStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            rightStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            lastExecutedStep = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
          };
          isReplayWalkRequest = true;
        };
        isWalkKickPhase = false;
        step = {
          rotation = 0deg;
          translation = {x = 66.3337; y = -9.93244;};
        };
        delay = 0;
      },
      {
        walkKickStep = {
          keyframe = [];
          longKickParams = [];
          increaseSwingHeightFactor = 1;
          reduceSwingFootHeight = 0;
          numOfBalanceSteps = 0;
          useSlowSupportFootHeightAfterKickInterpolation = false;
          useSlowSwingFootHeightInterpolation = 0;
          overrideOldSwingFoot = none;
          overrideOldSupportFoot = none;
          currentKick = none;
          useLastKeyframeForSupportFootXTranslation = false;
          usedWalkDelay = false;
          currentKickVariant = [];
          lastStepInfo = {
            nextIsLeftPhase = false;
            wasLastPhaseLeftPhase = false;
            wasLastPhaseInWalkKick = false;
            leftStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            rightStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            lastExecutedStep = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
          };
          isReplayWalkRequest = true;
        };
        isWalkKickPhase = false;
        step = {
          rotation = 0deg;
          translation = {x = 66.418; y = 0;};
        };
        delay = 0;
      },
      {
        walkKickStep = {
          keyframe = [];
          longKickParams = [];
          increaseSwingHeightFactor = 1;
          reduceSwingFootHeight = 0;
          numOfBalanceSteps = 0;
          useSlowSupportFootHeightAfterKickInterpolation = false;
          useSlowSwingFootHeightInterpolation = 0;
          overrideOldSwingFoot = none;
          overrideOldSupportFoot = none;
          currentKick = none;
          useLastKeyframeForSupportFootXTranslation = false;
          usedWalkDelay = false;
          currentKickVariant = [];
          lastStepInfo = {
            nextIsLeftPhase = false;
            wasLastPhaseLeftPhase = false;
            wasLastPhaseInWalkKick = false;
            leftStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            rightStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            lastExecutedStep = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
          };
          isReplayWalkRequest = true;
        };
        isWalkKickPhase = false;
        step = {
          rotation = -7.74996deg;
          translation = {x = 59.5911; y = -28.8573;};
        };
        delay = 0;
      },
      {
        walkKickStep = {
          keyframe = [];
          longKickParams = [];
          increaseSwingHeightFactor = 1;
          reduceSwingFootHeight = 0;
          numOfBalanceSteps = 0;
          useSlowSupportFootHeightAfterKickInterpolation = false;
          useSlowSwingFootHeightInterpolation = 0;
          overrideOldSwingFoot = none;
          overrideOldSupportFoot = none;
          currentKick = none;
          useLastKeyframeForSupportFootXTranslation = false;
          usedWalkDelay = false;
          currentKickVariant = [];
          lastStepInfo = {
            nextIsLeftPhase = false;
            wasLastPhaseLeftPhase = false;
            wasLastPhaseInWalkKick = false;
            leftStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            rightStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            lastExecutedStep = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
          };
          isReplayWalkRequest = true;
        };
        isWalkKickPhase = false;
        step = {
          rotation = 0deg;
          translation = {x = 66.4637; y = 0;};
        };
        delay = 0;
      },
      {
        walkKickStep = {
          keyframe = [];
          longKickParams = [];
          increaseSwingHeightFactor = 1;
          reduceSwingFootHeight = 0;
          numOfBalanceSteps = 0;
          useSlowSupportFootHeightAfterKickInterpolation = false;
          useSlowSwingFootHeightInterpolation = 0;
          overrideOldSwingFoot = none;
          overrideOldSupportFoot = none;
          currentKick = none;
          useLastKeyframeForSupportFootXTranslation = false;
          usedWalkDelay = false;
          currentKickVariant = [];
          lastStepInfo = {
            nextIsLeftPhase = false;
            wasLastPhaseLeftPhase = false;
            wasLastPhaseInWalkKick = false;
            leftStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            rightStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            lastExecutedStep = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
          };
          isReplayWalkRequest = true;
        };
        isWalkKickPhase = false;
        step = {
          rotation = 0deg;
          translation = {x = 66.5281; y = -17.8766;};
        };
        delay = 0;
      },
      {
        walkKickStep = {
          keyframe = [];
          longKickParams = [];
          increaseSwingHeightFactor = 1;
          reduceSwingFootHeight = 0;
          numOfBalanceSteps = 0;
          useSlowSupportFootHeightAfterKickInterpolation = false;
          useSlowSwingFootHeightInterpolation = 0;
          overrideOldSwingFoot = none;
          overrideOldSupportFoot = none;
          currentKick = none;
          useLastKeyframeForSupportFootXTranslation = false;
          usedWalkDelay = false;
          currentKickVariant = [];
          lastStepInfo = {
            nextIsLeftPhase = false;
            wasLastPhaseLeftPhase = false;
            wasLastPhaseInWalkKick = false;
            leftStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            rightStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            lastExecutedStep = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
          };
          isReplayWalkRequest = true;
        };
        isWalkKickPhase = false;
        step = {
          rotation = -0.634752deg;
          translation = {x = 66.5328; y = 0;};
        };
        delay = 0;
      },
      {
        walkKickStep = {
          keyframe = [];
          longKickParams = [];
          increaseSwingHeightFactor = 1;
          reduceSwingFootHeight = 0;
          numOfBalanceSteps = 0;
          useSlowSupportFootHeightAfterKickInterpolation = false;
          useSlowSwingFootHeightInterpolation = 0;
          overrideOldSwingFoot = none;
          overrideOldSupportFoot = none;
          currentKick = none;
          useLastKeyframeForSupportFootXTranslation = false;
          usedWalkDelay = false;
          currentKickVariant = [];
          lastStepInfo = {
            nextIsLeftPhase = false;
            wasLastPhaseLeftPhase = false;
            wasLastPhaseInWalkKick = false;
            leftStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            rightStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            lastExecutedStep = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
          };
          isReplayWalkRequest = true;
        };
        isWalkKickPhase = false;
        step = {
          rotation = -9.43366deg;
          translation = {x = 56.3354; y = -29.3184;};
        };
        delay = 0;
      },
      {
        walkKickStep = {
          keyframe = [];
          longKickParams = [];
          increaseSwingHeightFactor = 1;
          reduceSwingFootHeight = 0;
          numOfBalanceSteps = 0;
          useSlowSupportFootHeightAfterKickInterpolation = false;
          useSlowSwingFootHeightInterpolation = 0;
          overrideOldSwingFoot = none;
          overrideOldSupportFoot = none;
          currentKick = none;
          useLastKeyframeForSupportFootXTranslation = false;
          usedWalkDelay = false;
          currentKickVariant = [];
          lastStepInfo = {
            nextIsLeftPhase = false;
            wasLastPhaseLeftPhase = false;
            wasLastPhaseInWalkKick = false;
            leftStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            rightStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            lastExecutedStep = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
          };
          isReplayWalkRequest = true;
        };
        isWalkKickPhase = false;
        step = {
          rotation = 0deg;
          translation = {x = 66.6491; y = 0;};
        };
        delay = 0;
      },
      {
        walkKickStep = {
          keyframe = [];
          longKickParams = [];
          increaseSwingHeightFactor = 1;
          reduceSwingFootHeight = 0;
          numOfBalanceSteps = 0;
          useSlowSupportFootHeightAfterKickInterpolation = false;
          useSlowSwingFootHeightInterpolation = 0;
          overrideOldSwingFoot = none;
          overrideOldSupportFoot = none;
          currentKick = none;
          useLastKeyframeForSupportFootXTranslation = false;
          usedWalkDelay = false;
          currentKickVariant = [];
          lastStepInfo = {
            nextIsLeftPhase = false;
            wasLastPhaseLeftPhase = false;
            wasLastPhaseInWalkKick = false;
            leftStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            rightStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            lastExecutedStep = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
          };
          isReplayWalkRequest = true;
        };
        isWalkKickPhase = false;
        step = {
          rotation = -12.6932deg;
          translation = {x = 48.0534; y = -28.565;};
        };
        delay = 0;
      },
      {
        walkKickStep = {
          keyframe = [];
          longKickParams = [];
          increaseSwingHeightFactor = 1;
          reduceSwingFootHeight = 0;
          numOfBalanceSteps = 0;
          useSlowSupportFootHeightAfterKickInterpolation = false;
          useSlowSwingFootHeightInterpolation = 0;
          overrideOldSwingFoot = none;
          overrideOldSupportFoot = none;
          currentKick = none;
          useLastKeyframeForSupportFootXTranslation = false;
          usedWalkDelay = false;
          currentKickVariant = [];
          lastStepInfo = {
            nextIsLeftPhase = false;
            wasLastPhaseLeftPhase = false;
            wasLastPhaseInWalkKick = false;
            leftStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            rightStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            lastExecutedStep = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
          };
          isReplayWalkRequest = true;
        };
        isWalkKickPhase = false;
        step = {
          rotation = 0deg;
          translation = {x = 66.6975; y = 0;};
        };
        delay = 0;
      },
      {
        walkKickStep = {
          keyframe = [];
          longKickParams = [];
          increaseSwingHeightFactor = 1;
          reduceSwingFootHeight = 0;
          numOfBalanceSteps = 0;
          useSlowSupportFootHeightAfterKickInterpolation = false;
          useSlowSwingFootHeightInterpolation = 0;
          overrideOldSwingFoot = none;
          overrideOldSupportFoot = none;
          currentKick = none;
          useLastKeyframeForSupportFootXTranslation = false;
          usedWalkDelay = false;
          currentKickVariant = [];
          lastStepInfo = {
            nextIsLeftPhase = false;
            wasLastPhaseLeftPhase = false;
            wasLastPhaseInWalkKick = false;
            leftStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            rightStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            lastExecutedStep = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
          };
          isReplayWalkRequest = true;
        };
        isWalkKickPhase = false;
        step = {
          rotation = 0deg;
          translation = {x = 32.4286; y = -115;};
        };
        delay = 0;
      },
      {
        walkKickStep = {
          keyframe = [];
          longKickParams = [];
          increaseSwingHeightFactor = 1;
          reduceSwingFootHeight = 0;
          numOfBalanceSteps = 0;
          useSlowSupportFootHeightAfterKickInterpolation = false;
          useSlowSwingFootHeightInterpolation = 0;
          overrideOldSwingFoot = none;
          overrideOldSupportFoot = none;
          currentKick = none;
          useLastKeyframeForSupportFootXTranslation = false;
          usedWalkDelay = false;
          currentKickVariant = [];
          lastStepInfo = {
            nextIsLeftPhase = false;
            wasLastPhaseLeftPhase = false;
            wasLastPhaseInWalkKick = false;
            leftStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            rightStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            lastExecutedStep = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
          };
          isReplayWalkRequest = true;
        };
        isWalkKickPhase = false;
        step = {
          rotation = 6.68069deg;
          translation = {x = 51.1786; y = 23.5591;};
        };
        delay = 0;
      },
      {
        walkKickStep = {
          keyframe = [];
          longKickParams = [];
          increaseSwingHeightFactor = 1;
          reduceSwingFootHeight = 0;
          numOfBalanceSteps = 0;
          useSlowSupportFootHeightAfterKickInterpolation = false;
          useSlowSwingFootHeightInterpolation = 0;
          overrideOldSwingFoot = none;
          overrideOldSupportFoot = none;
          currentKick = none;
          useLastKeyframeForSupportFootXTranslation = false;
          usedWalkDelay = false;
          currentKickVariant = [];
          lastStepInfo = {
            nextIsLeftPhase = false;
            wasLastPhaseLeftPhase = false;
            wasLastPhaseInWalkKick = false;
            leftStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            rightStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            lastExecutedStep = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
          };
          isReplayWalkRequest = true;
        };
        isWalkKickPhase = false;
        step = {
          rotation = 0deg;
          translation = {x = 66.7257; y = -3.88985;};
        };
        delay = 0;
      },
      {
        walkKickStep = {
          keyframe = [];
          longKickParams = [];
          increaseSwingHeightFactor = 1;
          reduceSwingFootHeight = 0;
          numOfBalanceSteps = 0;
          useSlowSupportFootHeightAfterKickInterpolation = false;
          useSlowSwingFootHeightInterpolation = 0;
          overrideOldSwingFoot = none;
          overrideOldSupportFoot = none;
          currentKick = none;
          useLastKeyframeForSupportFootXTranslation = false;
          usedWalkDelay = false;
          currentKickVariant = [];
          lastStepInfo = {
            nextIsLeftPhase = false;
            wasLastPhaseLeftPhase = false;
            wasLastPhaseInWalkKick = false;
            leftStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            rightStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            lastExecutedStep = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
          };
          isReplayWalkRequest = true;
        };
        isWalkKickPhase = false;
        step = {
          rotation = 0deg;
          translation = {x = 66.7443; y = 1.73229;};
        };
        delay = 0;
      },
      {
        walkKickStep = {
          keyframe = [];
          longKickParams = [];
          increaseSwingHeightFactor = 1;
          reduceSwingFootHeight = 0;
          numOfBalanceSteps = 0;
          useSlowSupportFootHeightAfterKickInterpolation = false;
          useSlowSwingFootHeightInterpolation = 0;
          overrideOldSwingFoot = none;
          overrideOldSupportFoot = none;
          currentKick = none;
          useLastKeyframeForSupportFootXTranslation = false;
          usedWalkDelay = false;
          currentKickVariant = [];
          lastStepInfo = {
            nextIsLeftPhase = false;
            wasLastPhaseLeftPhase = false;
            wasLastPhaseInWalkKick = false;
            leftStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            rightStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            lastExecutedStep = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
          };
          isReplayWalkRequest = true;
        };
        isWalkKickPhase = false;
        step = {
          rotation = 0deg;
          translation = {x = 66.5914; y = -3.15924;};
        };
        delay = 0;
      },
      {
        walkKickStep = {
          keyframe = [];
          longKickParams = [];
          increaseSwingHeightFactor = 1;
          reduceSwingFootHeight = 0;
          numOfBalanceSteps = 0;
          useSlowSupportFootHeightAfterKickInterpolation = false;
          useSlowSwingFootHeightInterpolation = 0;
          overrideOldSwingFoot = none;
          overrideOldSupportFoot = none;
          currentKick = none;
          useLastKeyframeForSupportFootXTranslation = false;
          usedWalkDelay = false;
          currentKickVariant = [];
          lastStepInfo = {
            nextIsLeftPhase = false;
            wasLastPhaseLeftPhase = false;
            wasLastPhaseInWalkKick = false;
            leftStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            rightStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            lastExecutedStep = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
          };
          isReplayWalkRequest = true;
        };
        isWalkKickPhase = false;
        step = {
          rotation = 0deg;
          translation = {x = 66.5914; y = 0;};
        };
        delay = 0;
      },
      {
        walkKickStep = {
          keyframe = [];
          longKickParams = [];
          increaseSwingHeightFactor = 1;
          reduceSwingFootHeight = 0;
          numOfBalanceSteps = 0;
          useSlowSupportFootHeightAfterKickInterpolation = false;
          useSlowSwingFootHeightInterpolation = 0;
          overrideOldSwingFoot = none;
          overrideOldSupportFoot = none;
          currentKick = none;
          useLastKeyframeForSupportFootXTranslation = false;
          usedWalkDelay = false;
          currentKickVariant = [];
          lastStepInfo = {
            nextIsLeftPhase = false;
            wasLastPhaseLeftPhase = false;
            wasLastPhaseInWalkKick = false;
            leftStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            rightStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            lastExecutedStep = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
          };
          isReplayWalkRequest = true;
        };
        isWalkKickPhase = false;
        step = {
          rotation = 0deg;
          translation = {x = 0.5914; y = 0;};
        };
        delay = 0;
      },
      {
        walkKickStep = {
          keyframe = [];
          longKickParams = [];
          increaseSwingHeightFactor = 1;
          reduceSwingFootHeight = 0;
          numOfBalanceSteps = 0;
          useSlowSupportFootHeightAfterKickInterpolation = false;
          useSlowSwingFootHeightInterpolation = 0;
          overrideOldSwingFoot = none;
          overrideOldSupportFoot = none;
          currentKick = none;
          useLastKeyframeForSupportFootXTranslation = false;
          usedWalkDelay = false;
          currentKickVariant = [];
          lastStepInfo = {
            nextIsLeftPhase = false;
            wasLastPhaseLeftPhase = false;
            wasLastPhaseInWalkKick = false;
            leftStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            rightStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            lastExecutedStep = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
          };
          isReplayWalkRequest = true;
        };
        isWalkKickPhase = false;
        step = {
          rotation = 0deg;
          translation = {x = 0.5914; y = 0;};
        };
        delay = 0;
      }
    ];
  },
  {
    description = Diagonal_Walk;
    isLeftPhaseStart = false;
    walkRequests = [
      {
        walkKickStep = {
          keyframe = [];
          longKickParams = [];
          increaseSwingHeightFactor = 1;
          reduceSwingFootHeight = 0;
          numOfBalanceSteps = 0;
          useSlowSupportFootHeightAfterKickInterpolation = false;
          useSlowSwingFootHeightInterpolation = 0;
          overrideOldSwingFoot = none;
          overrideOldSupportFoot = none;
          currentKick = none;
          useLastKeyframeForSupportFootXTranslation = false;
          usedWalkDelay = false;
          currentKickVariant = [];
          lastStepInfo = {
            nextIsLeftPhase = false;
            wasLastPhaseLeftPhase = false;
            wasLastPhaseInWalkKick = false;
            leftStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            rightStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            lastExecutedStep = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
          };
          isReplayWalkRequest = true;
        };
        isWalkKickPhase = false;
        step = {
          rotation = 0deg;
          translation = {x = 42.1643; y = -115;};
        };
        delay = 0;
      },
      {
        walkKickStep = {
          keyframe = [];
          longKickParams = [];
          increaseSwingHeightFactor = 1;
          reduceSwingFootHeight = 0;
          numOfBalanceSteps = 0;
          useSlowSupportFootHeightAfterKickInterpolation = false;
          useSlowSwingFootHeightInterpolation = 0;
          overrideOldSwingFoot = none;
          overrideOldSupportFoot = none;
          currentKick = none;
          useLastKeyframeForSupportFootXTranslation = false;
          usedWalkDelay = false;
          currentKickVariant = [];
          lastStepInfo = {
            nextIsLeftPhase = false;
            wasLastPhaseLeftPhase = false;
            wasLastPhaseInWalkKick = false;
            leftStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            rightStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            lastExecutedStep = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
          };
          isReplayWalkRequest = true;
        };
        isWalkKickPhase = false;
        step = {
          rotation = 18.5035deg;
          translation = {x = 42.5974; y = 31.3077;};
        };
        delay = 0;
      },
      {
        walkKickStep = {
          keyframe = [];
          longKickParams = [];
          increaseSwingHeightFactor = 1;
          reduceSwingFootHeight = 0;
          numOfBalanceSteps = 0;
          useSlowSupportFootHeightAfterKickInterpolation = false;
          useSlowSwingFootHeightInterpolation = 0;
          overrideOldSwingFoot = none;
          overrideOldSupportFoot = none;
          currentKick = none;
          useLastKeyframeForSupportFootXTranslation = false;
          usedWalkDelay = false;
          currentKickVariant = [];
          lastStepInfo = {
            nextIsLeftPhase = false;
            wasLastPhaseLeftPhase = false;
            wasLastPhaseInWalkKick = false;
            leftStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            rightStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            lastExecutedStep = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
          };
          isReplayWalkRequest = true;
        };
        isWalkKickPhase = false;
        step = {
          rotation = 0deg;
          translation = {x = 61.3474; y = 0;};
        };
        delay = 0;
      },
      {
        walkKickStep = {
          keyframe = [];
          longKickParams = [];
          increaseSwingHeightFactor = 1;
          reduceSwingFootHeight = 0;
          numOfBalanceSteps = 0;
          useSlowSupportFootHeightAfterKickInterpolation = false;
          useSlowSwingFootHeightInterpolation = 0;
          overrideOldSwingFoot = none;
          overrideOldSupportFoot = none;
          currentKick = none;
          useLastKeyframeForSupportFootXTranslation = false;
          usedWalkDelay = false;
          currentKickVariant = [];
          lastStepInfo = {
            nextIsLeftPhase = false;
            wasLastPhaseLeftPhase = false;
            wasLastPhaseInWalkKick = false;
            leftStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            rightStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            lastExecutedStep = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
          };
          isReplayWalkRequest = true;
        };
        isWalkKickPhase = false;
        step = {
          rotation = 0deg;
          translation = {x = 67.5; y = 19.8521;};
        };
        delay = 0;
      },
      {
        walkKickStep = {
          keyframe = [];
          longKickParams = [];
          increaseSwingHeightFactor = 1;
          reduceSwingFootHeight = 0;
          numOfBalanceSteps = 0;
          useSlowSupportFootHeightAfterKickInterpolation = false;
          useSlowSwingFootHeightInterpolation = 0;
          overrideOldSwingFoot = none;
          overrideOldSupportFoot = none;
          currentKick = none;
          useLastKeyframeForSupportFootXTranslation = false;
          usedWalkDelay = false;
          currentKickVariant = [];
          lastStepInfo = {
            nextIsLeftPhase = false;
            wasLastPhaseLeftPhase = false;
            wasLastPhaseInWalkKick = false;
            leftStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            rightStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            lastExecutedStep = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
          };
          isReplayWalkRequest = true;
        };
        isWalkKickPhase = false;
        step = {
          rotation = 0deg;
          translation = {x = 67.5; y = -16.5111;};
        };
        delay = 0;
      },
      {
        walkKickStep = {
          keyframe = [];
          longKickParams = [];
          increaseSwingHeightFactor = 1;
          reduceSwingFootHeight = 0;
          numOfBalanceSteps = 0;
          useSlowSupportFootHeightAfterKickInterpolation = false;
          useSlowSwingFootHeightInterpolation = 0;
          overrideOldSwingFoot = none;
          overrideOldSupportFoot = none;
          currentKick = none;
          useLastKeyframeForSupportFootXTranslation = false;
          usedWalkDelay = false;
          currentKickVariant = [];
          lastStepInfo = {
            nextIsLeftPhase = false;
            wasLastPhaseLeftPhase = false;
            wasLastPhaseInWalkKick = false;
            leftStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            rightStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            lastExecutedStep = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
          };
          isReplayWalkRequest = true;
        };
        isWalkKickPhase = false;
        step = {
          rotation = 0deg;
          translation = {x = 67.5; y = 0;};
        };
        delay = 0;
      },
      {
        walkKickStep = {
          keyframe = [];
          longKickParams = [];
          increaseSwingHeightFactor = 1;
          reduceSwingFootHeight = 0;
          numOfBalanceSteps = 0;
          useSlowSupportFootHeightAfterKickInterpolation = false;
          useSlowSwingFootHeightInterpolation = 0;
          overrideOldSwingFoot = none;
          overrideOldSupportFoot = none;
          currentKick = none;
          useLastKeyframeForSupportFootXTranslation = false;
          usedWalkDelay = false;
          currentKickVariant = [];
          lastStepInfo = {
            nextIsLeftPhase = false;
            wasLastPhaseLeftPhase = false;
            wasLastPhaseInWalkKick = false;
            leftStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            rightStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            lastExecutedStep = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
          };
          isReplayWalkRequest = true;
        };
        isWalkKickPhase = false;
        step = {
          rotation = -0.319269deg;
          translation = {x = 65.661; y = -93.782;};
        };
        delay = 0;
      },
      {
        walkKickStep = {
          keyframe = [];
          longKickParams = [];
          increaseSwingHeightFactor = 1;
          reduceSwingFootHeight = 0;
          numOfBalanceSteps = 0;
          useSlowSupportFootHeightAfterKickInterpolation = false;
          useSlowSwingFootHeightInterpolation = 0;
          overrideOldSwingFoot = none;
          overrideOldSupportFoot = none;
          currentKick = none;
          useLastKeyframeForSupportFootXTranslation = false;
          usedWalkDelay = false;
          currentKickVariant = [];
          lastStepInfo = {
            nextIsLeftPhase = false;
            wasLastPhaseLeftPhase = false;
            wasLastPhaseInWalkKick = false;
            leftStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            rightStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            lastExecutedStep = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
          };
          isReplayWalkRequest = true;
        };
        isWalkKickPhase = false;
        step = {
          rotation = 0deg;
          translation = {x = 67.5; y = 0;};
        };
        delay = 0;
      },
      {
        walkKickStep = {
          keyframe = [];
          longKickParams = [];
          increaseSwingHeightFactor = 1;
          reduceSwingFootHeight = 0;
          numOfBalanceSteps = 0;
          useSlowSupportFootHeightAfterKickInterpolation = false;
          useSlowSwingFootHeightInterpolation = 0;
          overrideOldSwingFoot = none;
          overrideOldSupportFoot = none;
          currentKick = none;
          useLastKeyframeForSupportFootXTranslation = false;
          usedWalkDelay = false;
          currentKickVariant = [];
          lastStepInfo = {
            nextIsLeftPhase = false;
            wasLastPhaseLeftPhase = false;
            wasLastPhaseInWalkKick = false;
            leftStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            rightStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            lastExecutedStep = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
          };
          isReplayWalkRequest = true;
        };
        isWalkKickPhase = false;
        step = {
          rotation = 0deg;
          translation = {x = 67.5; y = -90.6362;};
        };
        delay = 0;
      },
      {
        walkKickStep = {
          keyframe = [];
          longKickParams = [];
          increaseSwingHeightFactor = 1;
          reduceSwingFootHeight = 0;
          numOfBalanceSteps = 0;
          useSlowSupportFootHeightAfterKickInterpolation = false;
          useSlowSwingFootHeightInterpolation = 0;
          overrideOldSwingFoot = none;
          overrideOldSupportFoot = none;
          currentKick = none;
          useLastKeyframeForSupportFootXTranslation = false;
          usedWalkDelay = false;
          currentKickVariant = [];
          lastStepInfo = {
            nextIsLeftPhase = false;
            wasLastPhaseLeftPhase = false;
            wasLastPhaseInWalkKick = false;
            leftStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            rightStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            lastExecutedStep = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
          };
          isReplayWalkRequest = true;
        };
        isWalkKickPhase = false;
        step = {
          rotation = 0deg;
          translation = {x = 67.5; y = 0;};
        };
        delay = 0;
      },
      {
        walkKickStep = {
          keyframe = [];
          longKickParams = [];
          increaseSwingHeightFactor = 1;
          reduceSwingFootHeight = 0;
          numOfBalanceSteps = 0;
          useSlowSupportFootHeightAfterKickInterpolation = false;
          useSlowSwingFootHeightInterpolation = 0;
          overrideOldSwingFoot = none;
          overrideOldSupportFoot = none;
          currentKick = none;
          useLastKeyframeForSupportFootXTranslation = false;
          usedWalkDelay = false;
          currentKickVariant = [];
          lastStepInfo = {
            nextIsLeftPhase = false;
            wasLastPhaseLeftPhase = false;
            wasLastPhaseInWalkKick = false;
            leftStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            rightStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            lastExecutedStep = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
          };
          isReplayWalkRequest = true;
        };
        isWalkKickPhase = false;
        step = {
          rotation = -6.53042deg;
          translation = {x = 65.0859; y = -94.4675;};
        };
        delay = 0;
      },
      {
        walkKickStep = {
          keyframe = [];
          longKickParams = [];
          increaseSwingHeightFactor = 1;
          reduceSwingFootHeight = 0;
          numOfBalanceSteps = 0;
          useSlowSupportFootHeightAfterKickInterpolation = false;
          useSlowSwingFootHeightInterpolation = 0;
          overrideOldSwingFoot = none;
          overrideOldSupportFoot = none;
          currentKick = none;
          useLastKeyframeForSupportFootXTranslation = false;
          usedWalkDelay = false;
          currentKickVariant = [];
          lastStepInfo = {
            nextIsLeftPhase = false;
            wasLastPhaseLeftPhase = false;
            wasLastPhaseInWalkKick = false;
            leftStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            rightStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            lastExecutedStep = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
          };
          isReplayWalkRequest = true;
        };
        isWalkKickPhase = false;
        step = {
          rotation = 0deg;
          translation = {x = 67.5; y = 0;};
        };
        delay = 0;
      },
      {
        walkKickStep = {
          keyframe = [];
          longKickParams = [];
          increaseSwingHeightFactor = 1;
          reduceSwingFootHeight = 0;
          numOfBalanceSteps = 0;
          useSlowSupportFootHeightAfterKickInterpolation = false;
          useSlowSwingFootHeightInterpolation = 0;
          overrideOldSwingFoot = none;
          overrideOldSupportFoot = none;
          currentKick = none;
          useLastKeyframeForSupportFootXTranslation = false;
          usedWalkDelay = false;
          currentKickVariant = [];
          lastStepInfo = {
            nextIsLeftPhase = false;
            wasLastPhaseLeftPhase = false;
            wasLastPhaseInWalkKick = false;
            leftStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            rightStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            lastExecutedStep = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
          };
          isReplayWalkRequest = true;
        };
        isWalkKickPhase = false;
        step = {
          rotation = -13.2091deg;
          translation = {x = 63.9534; y = -42.4788;};
        };
        delay = 0;
      },
      {
        walkKickStep = {
          keyframe = [];
          longKickParams = [];
          increaseSwingHeightFactor = 1;
          reduceSwingFootHeight = 0;
          numOfBalanceSteps = 0;
          useSlowSupportFootHeightAfterKickInterpolation = false;
          useSlowSwingFootHeightInterpolation = 0;
          overrideOldSwingFoot = none;
          overrideOldSupportFoot = none;
          currentKick = none;
          useLastKeyframeForSupportFootXTranslation = false;
          usedWalkDelay = false;
          currentKickVariant = [];
          lastStepInfo = {
            nextIsLeftPhase = false;
            wasLastPhaseLeftPhase = false;
            wasLastPhaseInWalkKick = false;
            leftStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            rightStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            lastExecutedStep = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
          };
          isReplayWalkRequest = true;
        };
        isWalkKickPhase = false;
        step = {
          rotation = 0deg;
          translation = {x = 57.4049; y = 0;};
        };
        delay = 0;
      },
      {
        walkKickStep = {
          keyframe = [];
          longKickParams = [];
          increaseSwingHeightFactor = 1;
          reduceSwingFootHeight = 0;
          numOfBalanceSteps = 0;
          useSlowSupportFootHeightAfterKickInterpolation = false;
          useSlowSwingFootHeightInterpolation = 0;
          overrideOldSwingFoot = none;
          overrideOldSupportFoot = none;
          currentKick = none;
          useLastKeyframeForSupportFootXTranslation = false;
          usedWalkDelay = false;
          currentKickVariant = [];
          lastStepInfo = {
            nextIsLeftPhase = false;
            wasLastPhaseLeftPhase = false;
            wasLastPhaseInWalkKick = false;
            leftStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            rightStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            lastExecutedStep = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
          };
          isReplayWalkRequest = true;
        };
        isWalkKickPhase = false;
        step = {
          rotation = 0deg;
          translation = {x = 67.5; y = -4.88887;};
        };
        delay = 0;
      },
      {
        walkKickStep = {
          keyframe = [];
          longKickParams = [];
          increaseSwingHeightFactor = 1;
          reduceSwingFootHeight = 0;
          numOfBalanceSteps = 0;
          useSlowSupportFootHeightAfterKickInterpolation = false;
          useSlowSwingFootHeightInterpolation = 0;
          overrideOldSwingFoot = none;
          overrideOldSupportFoot = none;
          currentKick = none;
          useLastKeyframeForSupportFootXTranslation = false;
          usedWalkDelay = false;
          currentKickVariant = [];
          lastStepInfo = {
            nextIsLeftPhase = false;
            wasLastPhaseLeftPhase = false;
            wasLastPhaseInWalkKick = false;
            leftStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            rightStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            lastExecutedStep = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
          };
          isReplayWalkRequest = true;
        };
        isWalkKickPhase = false;
        step = {
          rotation = 0deg;
          translation = {x = 67.5; y = 4.00127;};
        };
        delay = 0;
      },
      {
        walkKickStep = {
          keyframe = [];
          longKickParams = [];
          increaseSwingHeightFactor = 1;
          reduceSwingFootHeight = 0;
          numOfBalanceSteps = 0;
          useSlowSupportFootHeightAfterKickInterpolation = false;
          useSlowSwingFootHeightInterpolation = 0;
          overrideOldSwingFoot = none;
          overrideOldSupportFoot = none;
          currentKick = none;
          useLastKeyframeForSupportFootXTranslation = false;
          usedWalkDelay = false;
          currentKickVariant = [];
          lastStepInfo = {
            nextIsLeftPhase = false;
            wasLastPhaseLeftPhase = false;
            wasLastPhaseInWalkKick = false;
            leftStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            rightStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            lastExecutedStep = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
          };
          isReplayWalkRequest = true;
        };
        isWalkKickPhase = false;
        step = {
          rotation = 0deg;
          translation = {x = 67.5; y = -14.7482;};
        };
        delay = 0;
      },
      {
        walkKickStep = {
          keyframe = [];
          longKickParams = [];
          increaseSwingHeightFactor = 1;
          reduceSwingFootHeight = 0;
          numOfBalanceSteps = 0;
          useSlowSupportFootHeightAfterKickInterpolation = false;
          useSlowSwingFootHeightInterpolation = 0;
          overrideOldSwingFoot = none;
          overrideOldSupportFoot = none;
          currentKick = none;
          useLastKeyframeForSupportFootXTranslation = false;
          usedWalkDelay = false;
          currentKickVariant = [];
          lastStepInfo = {
            nextIsLeftPhase = false;
            wasLastPhaseLeftPhase = false;
            wasLastPhaseInWalkKick = false;
            leftStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            rightStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            lastExecutedStep = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
          };
          isReplayWalkRequest = true;
        };
        isWalkKickPhase = false;
        step = {
          rotation = 0deg;
          translation = {x = 67.5; y = 0;};
        };
        delay = 0;
      }
    ];
  },
  {
    description = ForwardLong_Falling;
    isLeftPhaseStart = false;
    walkRequests = [
      {
        walkKickStep = {
          keyframe = [];
          longKickParams = [];
          increaseSwingHeightFactor = 1;
          reduceSwingFootHeight = 0;
          numOfBalanceSteps = 0;
          useSlowSupportFootHeightAfterKickInterpolation = false;
          useSlowSwingFootHeightInterpolation = 0;
          overrideOldSwingFoot = none;
          overrideOldSupportFoot = none;
          currentKick = none;
          useLastKeyframeForSupportFootXTranslation = false;
          usedWalkDelay = false;
          currentKickVariant = [];
          lastStepInfo = {
            nextIsLeftPhase = false;
            wasLastPhaseLeftPhase = false;
            wasLastPhaseInWalkKick = false;
            leftStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            rightStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            lastExecutedStep = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
          };
          isReplayWalkRequest = false;
        };
        isWalkKickPhase = false;
        step = {
          rotation = 0deg;
          translation = {x = 43.75; y = -2.32536;};
        };
        delay = 0;
      },
      {
        walkKickStep = {
          keyframe = [];
          longKickParams = [];
          increaseSwingHeightFactor = 1;
          reduceSwingFootHeight = 0;
          numOfBalanceSteps = 0;
          useSlowSupportFootHeightAfterKickInterpolation = false;
          useSlowSwingFootHeightInterpolation = 0;
          overrideOldSwingFoot = none;
          overrideOldSupportFoot = none;
          currentKick = none;
          useLastKeyframeForSupportFootXTranslation = false;
          usedWalkDelay = false;
          currentKickVariant = [];
          lastStepInfo = {
            nextIsLeftPhase = false;
            wasLastPhaseLeftPhase = false;
            wasLastPhaseInWalkKick = false;
            leftStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            rightStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            lastExecutedStep = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
          };
          isReplayWalkRequest = false;
        };
        isWalkKickPhase = false;
        step = {
          rotation = 0deg;
          translation = {x = 62.5; y = 0;};
        };
        delay = 0;
      },
      {
        walkKickStep = {
          keyframe = [];
          longKickParams = [];
          increaseSwingHeightFactor = 1;
          reduceSwingFootHeight = 0;
          numOfBalanceSteps = 0;
          useSlowSupportFootHeightAfterKickInterpolation = false;
          useSlowSwingFootHeightInterpolation = 0;
          overrideOldSwingFoot = none;
          overrideOldSupportFoot = none;
          currentKick = none;
          useLastKeyframeForSupportFootXTranslation = false;
          usedWalkDelay = false;
          currentKickVariant = [];
          lastStepInfo = {
            nextIsLeftPhase = false;
            wasLastPhaseLeftPhase = false;
            wasLastPhaseInWalkKick = false;
            leftStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            rightStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            lastExecutedStep = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
          };
          isReplayWalkRequest = false;
        };
        isWalkKickPhase = false;
        step = {
          rotation = -24deg;
          translation = {x = 25; y = -2.67154;};
        };
        delay = 0;
      },
      {
        walkKickStep = {
          keyframe = [];
          longKickParams = [];
          increaseSwingHeightFactor = 1;
          reduceSwingFootHeight = 0;
          numOfBalanceSteps = 0;
          useSlowSupportFootHeightAfterKickInterpolation = false;
          useSlowSwingFootHeightInterpolation = 0;
          overrideOldSwingFoot = none;
          overrideOldSupportFoot = none;
          currentKick = none;
          useLastKeyframeForSupportFootXTranslation = false;
          usedWalkDelay = false;
          currentKickVariant = [];
          lastStepInfo = {
            nextIsLeftPhase = false;
            wasLastPhaseLeftPhase = false;
            wasLastPhaseInWalkKick = false;
            leftStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            rightStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            lastExecutedStep = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
          };
          isReplayWalkRequest = false;
        };
        isWalkKickPhase = false;
        step = {
          rotation = -19.1304deg;
          translation = {x = 25; y = 4.59957;};
        };
        delay = 0;
      },
      {
        walkKickStep = {
          keyframe = [];
          longKickParams = [];
          increaseSwingHeightFactor = 1;
          reduceSwingFootHeight = 0;
          numOfBalanceSteps = 0;
          useSlowSupportFootHeightAfterKickInterpolation = false;
          useSlowSwingFootHeightInterpolation = 0;
          overrideOldSwingFoot = none;
          overrideOldSupportFoot = none;
          currentKick = none;
          useLastKeyframeForSupportFootXTranslation = false;
          usedWalkDelay = false;
          currentKickVariant = [];
          lastStepInfo = {
            nextIsLeftPhase = false;
            wasLastPhaseLeftPhase = false;
            wasLastPhaseInWalkKick = false;
            leftStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            rightStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            lastExecutedStep = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
          };
          isReplayWalkRequest = false;
        };
        isWalkKickPhase = false;
        step = {
          rotation = -38.7522deg;
          translation = {x = 25; y = 0;};
        };
        delay = 0;
      },
      {
        walkKickStep = {
          keyframe = [];
          longKickParams = [];
          increaseSwingHeightFactor = 1;
          reduceSwingFootHeight = 0;
          numOfBalanceSteps = 0;
          useSlowSupportFootHeightAfterKickInterpolation = false;
          useSlowSwingFootHeightInterpolation = 0;
          overrideOldSwingFoot = none;
          overrideOldSupportFoot = none;
          currentKick = none;
          useLastKeyframeForSupportFootXTranslation = false;
          usedWalkDelay = false;
          currentKickVariant = [];
          lastStepInfo = {
            nextIsLeftPhase = false;
            wasLastPhaseLeftPhase = false;
            wasLastPhaseInWalkKick = false;
            leftStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            rightStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            lastExecutedStep = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
          };
          isReplayWalkRequest = false;
        };
        isWalkKickPhase = false;
        step = {
          rotation = 0deg;
          translation = {x = 43.75; y = 49.2347;};
        };
        delay = 0;
      },
      {
        walkKickStep = {
          keyframe = [
            {
              stepTarget = {
                rotation = 2.31051deg;
                translation = {x = 52.8063; y = -32.1779;};
              };
              stepTargetSwing = {
                rotation = 2.31051deg;
                translation = {x = 52.8063; y = -32.1779;};
              };
              stepTargetConverted = {
                rotation = 2.31051deg;
                translation = {x = 52.1468; y = -33.2157;};
              };
              stepTargetSwingConverted = {
                rotation = 2.31051deg;
                translation = {x = 52.1468; y = -33.2157;};
              };
              stepRatio = 0.999922;
              speedUpSwing = {x = 1; y = 1.25;};
              holdXSwingTarget = false;
              holdXSupportTarget = false;
              reachedWaitPosition = false;
              interpolationType = cosineZeroToMax;
            },
            {
              stepTarget = {
                rotation = 2.31051deg;
                translation = {x = 52.8063; y = -32.1779;};
              };
              stepTargetSwing = {
                rotation = 2.31051deg;
                translation = {x = 52.8063; y = -32.1779;};
              };
              stepTargetConverted = {
                rotation = 2.31051deg;
                translation = {x = 52.1468; y = -33.2157;};
              };
              stepTargetSwingConverted = {
                rotation = 2.31051deg;
                translation = {x = 52.1468; y = -33.2157;};
              };
              stepRatio = 7.76688e-05;
              speedUpSwing = {x = 1; y = 1;};
              holdXSwingTarget = false;
              holdXSupportTarget = false;
              reachedWaitPosition = false;
              interpolationType = sinusMaxToZero;
            }
          ];
          longKickParams = [];
          increaseSwingHeightFactor = 1;
          reduceSwingFootHeight = 0;
          numOfBalanceSteps = 0;
          useSlowSupportFootHeightAfterKickInterpolation = false;
          useSlowSwingFootHeightInterpolation = 0;
          overrideOldSwingFoot = none;
          overrideOldSupportFoot = none;
          currentKick = forwardLong;
          useLastKeyframeForSupportFootXTranslation = false;
          usedWalkDelay = false;
          currentKickVariant = [
            {
              kickType = walkForwardsLeftLong;
              walkKickType = forwardLong;
              kickLeg = left;
              precision = notPrecise;
              length = 3960.49;
              power = 1;
              direction = 0deg;
              kickInterpolation = 0;
              shiftTurnKickPose = false;
              ignoreNoStandPhaseRule = false;
              diagonalKickInfo = {
                diagonalKickState = none;
                contactPoint = {x = 0; y = 0;};
              };
              ballEstimationTime = 0;
              delayParams = {delay = 0; kickIndex = -1; forceDelay = true;};
              kickIndex = 1;
            }
          ];
          lastStepInfo = {
            nextIsLeftPhase = false;
            wasLastPhaseLeftPhase = true;
            wasLastPhaseInWalkKick = false;
            leftStartOffset = {
              rotation = 0deg;
              translation = {x = 21.875; y = 23.1403;};
            };
            rightStartOffset = {
              rotation = -0deg;
              translation = {x = -21.875; y = -26.0944;};
            };
            lastExecutedStep = {
              rotation = 0deg;
              translation = {x = 43.75; y = 49.2347;};
            };
          };
          isReplayWalkRequest = true;
        };
        isWalkKickPhase = true;
        step = {
          rotation = 2.166deg;
          translation = {x = 52.1478; y = -29.9814;};
        };
        delay = 0;
      },
      {
        walkKickStep = {
          keyframe = [];
          longKickParams = [];
          increaseSwingHeightFactor = 1;
          reduceSwingFootHeight = 0;
          numOfBalanceSteps = 0;
          useSlowSupportFootHeightAfterKickInterpolation = false;
          useSlowSwingFootHeightInterpolation = 0;
          overrideOldSwingFoot = none;
          overrideOldSupportFoot = none;
          currentKick = none;
          useLastKeyframeForSupportFootXTranslation = false;
          usedWalkDelay = false;
          currentKickVariant = [];
          lastStepInfo = {
            nextIsLeftPhase = false;
            wasLastPhaseLeftPhase = false;
            wasLastPhaseInWalkKick = false;
            leftStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            rightStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            lastExecutedStep = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
          };
          isReplayWalkRequest = false;
        };
        isWalkKickPhase = false;
        step = {
          rotation = 24deg;
          translation = {x = -12.5; y = 7.75943;};
        };
        delay = 0;
      },
      {
        walkKickStep = {
          keyframe = [];
          longKickParams = [];
          increaseSwingHeightFactor = 1;
          reduceSwingFootHeight = 0;
          numOfBalanceSteps = 0;
          useSlowSupportFootHeightAfterKickInterpolation = false;
          useSlowSwingFootHeightInterpolation = 0;
          overrideOldSwingFoot = none;
          overrideOldSupportFoot = none;
          currentKick = none;
          useLastKeyframeForSupportFootXTranslation = false;
          usedWalkDelay = false;
          currentKickVariant = [];
          lastStepInfo = {
            nextIsLeftPhase = false;
            wasLastPhaseLeftPhase = false;
            wasLastPhaseInWalkKick = false;
            leftStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            rightStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            lastExecutedStep = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
          };
          isReplayWalkRequest = false;
        };
        isWalkKickPhase = false;
        step = {
          rotation = 0deg;
          translation = {x = -31.25; y = 0;};
        };
        delay = 0;
      },
      {
        walkKickStep = {
          keyframe = [
            {
              stepTarget = {
                rotation = -1.09749deg;
                translation = {x = 51.6198; y = -14.85;};
              };
              stepTargetSwing = {
                rotation = -1.09749deg;
                translation = {x = 51.6198; y = -14.85;};
              };
              stepTargetConverted = {
                rotation = -1.09749deg;
                translation = {x = 51.7597; y = -14.3595;};
              };
              stepTargetSwingConverted = {
                rotation = -1.09749deg;
                translation = {x = 51.7597; y = -14.3595;};
              };
              stepRatio = 0.999632;
              speedUpSwing = {x = 1; y = 1.25;};
              holdXSwingTarget = false;
              holdXSupportTarget = false;
              reachedWaitPosition = false;
              interpolationType = cosineZeroToMax;
            },
            {
              stepTarget = {
                rotation = -1.09749deg;
                translation = {x = 51.6198; y = -14.85;};
              };
              stepTargetSwing = {
                rotation = -1.09749deg;
                translation = {x = 51.6198; y = -14.85;};
              };
              stepTargetConverted = {
                rotation = -1.09749deg;
                translation = {x = 51.7597; y = -14.3595;};
              };
              stepTargetSwingConverted = {
                rotation = -1.09749deg;
                translation = {x = 51.7597; y = -14.3595;};
              };
              stepRatio = 0.000368056;
              speedUpSwing = {x = 1; y = 1;};
              holdXSwingTarget = false;
              holdXSupportTarget = false;
              reachedWaitPosition = false;
              interpolationType = sinusMaxToZero;
            }
          ];
          longKickParams = [];
          increaseSwingHeightFactor = 1;
          reduceSwingFootHeight = 0;
          numOfBalanceSteps = 0;
          useSlowSupportFootHeightAfterKickInterpolation = false;
          useSlowSwingFootHeightInterpolation = 0;
          overrideOldSwingFoot = none;
          overrideOldSupportFoot = none;
          currentKick = forwardLong;
          useLastKeyframeForSupportFootXTranslation = false;
          usedWalkDelay = false;
          currentKickVariant = [
            {
              kickType = walkForwardsRightLong;
              walkKickType = forwardLong;
              kickLeg = right;
              precision = notPrecise;
              length = 4019.87;
              power = 1;
              direction = 2.98817deg;
              kickInterpolation = 0;
              shiftTurnKickPose = false;
              ignoreNoStandPhaseRule = false;
              diagonalKickInfo = {
                diagonalKickState = none;
                contactPoint = {x = 0; y = 0;};
              };
              ballEstimationTime = 0;
              delayParams = {delay = 0; kickIndex = -1; forceDelay = false;};
              kickIndex = 1;
            }
          ];
          lastStepInfo = {
            nextIsLeftPhase = true;
            wasLastPhaseLeftPhase = false;
            wasLastPhaseInWalkKick = false;
            leftStartOffset = {
              rotation = 0.0379699deg;
              translation = {x = 14.7666; y = 0.151229;};
            };
            rightStartOffset = {
              rotation = -0.0379699deg;
              translation = {x = -15.5518; y = -0.181457;};
            };
            lastExecutedStep = {
              rotation = 0deg;
              translation = {x = -31.25; y = 0;};
            };
          };
          isReplayWalkRequest = true;
        };
        isWalkKickPhase = true;
        step = {
          rotation = -1.45086deg;
          translation = {x = 54.0271; y = -9.20715;};
        };
        delay = 0;
      },
      {
        walkKickStep = {
          keyframe = [
            {
              stepTarget = {
                rotation = 2.60642deg;
                translation = {x = 9.9; y = -11.1537;};
              };
              stepTargetSwing = {
                rotation = 2.60642deg;
                translation = {x = 9.9; y = -11.1537;};
              };
              stepTargetConverted = {
                rotation = 2.60642deg;
                translation = {x = 9.64377; y = -11.3501;};
              };
              stepTargetSwingConverted = {
                rotation = 2.60642deg;
                translation = {x = 9.64377; y = -11.3501;};
              };
              stepRatio = 0.25;
              speedUpSwing = {x = 1; y = 1.5;};
              holdXSwingTarget = false;
              holdXSupportTarget = false;
              reachedWaitPosition = false;
              interpolationType = cosineZeroToMax;
            },
            {
              stepTarget = {
                rotation = 2.60642deg;
                translation = {x = 59.4; y = -8.83208;};
              };
              stepTargetSwing = {
                rotation = 2.60642deg;
                translation = {x = 59.4; y = -8.83208;};
              };
              stepTargetConverted = {
                rotation = 2.60642deg;
                translation = {x = 59.1838; y = -10.1549;};
              };
              stepTargetSwingConverted = {
                rotation = 2.60642deg;
                translation = {x = 59.1838; y = -10.1549;};
              };
              stepRatio = 0.4;
              speedUpSwing = {x = 2; y = 2;};
              holdXSwingTarget = false;
              holdXSupportTarget = false;
              reachedWaitPosition = false;
              interpolationType = linear;
            },
            {
              stepTarget = {
                rotation = 2.60642deg;
                translation = {x = 59.4; y = -8.71825;};
              };
              stepTargetSwing = {
                rotation = 2.60642deg;
                translation = {x = 59.4; y = -8.71825;};
              };
              stepTargetConverted = {
                rotation = 2.60642deg;
                translation = {x = 59.1864; y = -10.0411;};
              };
              stepTargetSwingConverted = {
                rotation = 2.60642deg;
                translation = {x = 59.1864; y = -10.0411;};
              };
              stepRatio = 0.35;
              speedUpSwing = {x = 1; y = 1;};
              holdXSwingTarget = false;
              holdXSupportTarget = false;
              reachedWaitPosition = false;
              interpolationType = linear;
            }
          ];
          longKickParams = [
            {
              joint = lHipPitch;
              offset = -22deg;
              minRatio = 0.4;
              middleRatio = 0.661;
              maxRatio = 0.9;
              minimumRatio = 0.4;
              shiftByKeyFrame = -1;
            },
            {
              joint = lAnklePitch;
              offset = 15deg;
              minRatio = 0.4;
              middleRatio = 0.661;
              maxRatio = 1;
              minimumRatio = 0.4;
              shiftByKeyFrame = -1;
            },
            {
              joint = lKneePitch;
              offset = -10deg;
              minRatio = 0.5;
              middleRatio = 0.661;
              maxRatio = 0.85;
              minimumRatio = 0.5;
              shiftByKeyFrame = -1;
            },
            {
              joint = lAnklePitch;
              offset = -4deg;
              minRatio = 0;
              middleRatio = 0.1;
              maxRatio = 0.661;
              minimumRatio = 0.5;
              shiftByKeyFrame = -1;
            },
            {
              joint = rHipPitch;
              offset = -2deg;
              minRatio = 0.25;
              middleRatio = 1;
              maxRatio = 1.75;
              minimumRatio = 0.25;
              shiftByKeyFrame = -1;
            },
            {
              joint = lAnklePitch;
              offset = 0deg;
              minRatio = 0;
              middleRatio = 0.5;
              maxRatio = 0.75;
              minimumRatio = 0;
              shiftByKeyFrame = -1;
            }
          ];
          increaseSwingHeightFactor = 1;
          reduceSwingFootHeight = 3;
          numOfBalanceSteps = 1;
          useSlowSupportFootHeightAfterKickInterpolation = true;
          useSlowSwingFootHeightInterpolation = 400;
          overrideOldSwingFoot = measured;
          overrideOldSupportFoot = request;
          currentKick = forwardLong;
          useLastKeyframeForSupportFootXTranslation = true;
          usedWalkDelay = false;
          currentKickVariant = [
            {
              kickType = walkForwardsRightLong;
              walkKickType = forwardLong;
              kickLeg = right;
              precision = notPrecise;
              length = 4019.87;
              power = 1;
              direction = 2.98817deg;
              kickInterpolation = 0;
              shiftTurnKickPose = false;
              ignoreNoStandPhaseRule = false;
              diagonalKickInfo = {
                diagonalKickState = none;
                contactPoint = {x = 0; y = 0;};
              };
              ballEstimationTime = 0;
              delayParams = {delay = 0; kickIndex = -1; forceDelay = false;};
              kickIndex = 2;
            }
          ];
          lastStepInfo = {
            nextIsLeftPhase = false;
            wasLastPhaseLeftPhase = true;
            wasLastPhaseInWalkKick = true;
            leftStartOffset = {
              rotation = -0.546888deg;
              translation = {x = 25.015; y = -6.74897;};
            };
            rightStartOffset = {
              rotation = 0.546888deg;
              translation = {x = -25.4704; y = 6.92746;};
            };
            lastExecutedStep = {
              rotation = -1.45086deg;
              translation = {x = 54.0271; y = -9.20715;};
            };
          };
          isReplayWalkRequest = true;
        };
        isWalkKickPhase = true;
        step = {
          rotation = -0.285944deg;
          translation = {x = 59.4; y = -4.11615;};
        };
        delay = 0.06;
      },
      {
        walkKickStep = {
          keyframe = [];
          longKickParams = [];
          increaseSwingHeightFactor = 1;
          reduceSwingFootHeight = 0;
          numOfBalanceSteps = 0;
          useSlowSupportFootHeightAfterKickInterpolation = false;
          useSlowSwingFootHeightInterpolation = 0;
          overrideOldSwingFoot = none;
          overrideOldSupportFoot = none;
          currentKick = none;
          useLastKeyframeForSupportFootXTranslation = false;
          usedWalkDelay = false;
          currentKickVariant = [];
          lastStepInfo = {
            nextIsLeftPhase = false;
            wasLastPhaseLeftPhase = false;
            wasLastPhaseInWalkKick = false;
            leftStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            rightStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            lastExecutedStep = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
          };
          isReplayWalkRequest = false;
        };
        isWalkKickPhase = false;
        step = {
          rotation = 0deg;
          translation = {x = 1.25; y = 0;};
        };
        delay = 0;
      },
      {
        walkKickStep = {
          keyframe = [];
          longKickParams = [];
          increaseSwingHeightFactor = 1;
          reduceSwingFootHeight = 0;
          numOfBalanceSteps = 0;
          useSlowSupportFootHeightAfterKickInterpolation = false;
          useSlowSwingFootHeightInterpolation = 0;
          overrideOldSwingFoot = none;
          overrideOldSupportFoot = none;
          currentKick = none;
          useLastKeyframeForSupportFootXTranslation = false;
          usedWalkDelay = false;
          currentKickVariant = [];
          lastStepInfo = {
            nextIsLeftPhase = false;
            wasLastPhaseLeftPhase = false;
            wasLastPhaseInWalkKick = false;
            leftStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            rightStartOffset = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
            lastExecutedStep = {
              rotation = 0deg;
              translation = {x = 0; y = 0;};
            };
          };
          isReplayWalkRequest = false;
        };
        isWalkKickPhase = false;
        step = {
          rotation = 0deg;
          translation = {x = 1.25; y = 0;};
        };
        delay = 0;
      }
    ];
  }
];
