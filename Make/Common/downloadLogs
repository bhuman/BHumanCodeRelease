#!/bin/bash
# Downloads all log files from one or more robots

BASEPATH=$(cd "$(dirname "$(which "$0")")" && pwd)

# Try to make size calculation the same locally and on the robot.
# Does not seem to work perfectly.
DUOPTIONS_LINUX="-hc --apparent-size"
if [ "$(uname)" = "Darwin" ]; then
  DUOPTIONS="-hcAB 1"
else
  DUOPTIONS="$DUOPTIONS_LINUX"
fi

usage()
{
  echo "usage: downloadLogs [-d | -D | --just-delete] <ip> {<ip>}"
  echo " -d                  Delete log files after download."
  echo " -D | --just-delete  Just delete log files."
  echo "  examples:"
  echo "    ./downloadLogs 192.168.2.28"
  echo "    ./downloadLogs -d 192.168.2.28 192.168.2.29"
  exit 1
}

download()
{
  local IP=$1

  source "$BASEPATH/setupTarget" "$IP"
  LOGPATH=/home/$TARGET_USER/logs/

  if $DOWNLOAD; then
    local NAME="$(ssh $SSHOPTIONS -o ConnectTimeout=2 $TARGET_USER@$IP "hostname")"
    if [ -z "$NAME" ]; then
      echo >&2 "error: could not get name from robot!"
      RETURN=1
      return
    fi

    ssh $SSHOPTIONS $TARGET_USER@$IP "test -d $LOGPATH"
    if [ $? -ne 0 ]; then
      echo >&2 "error: log file directory does not exist on robot!"
      RETURN=1
      return
    fi

    if [ -z "$(ssh $SSHOPTIONS $TARGET_USER@$IP "ls $LOGPATH | grep .log")" ]; then
      echo "no log files on robot"
      return # No error
    fi

    local LOCALPATH="$BASEPATH/../../Config/Logs"/$(date +%F-%H-%M)/$NAME
    mkdir -p "$LOCALPATH"
  fi

  if [ ! -z "$(ssh $SSHOPTIONS $TARGET_USER@$IP "pgrep bhuman")" ]; then
    local RESTART=true
    echo "stopping bhuman"
    ssh $SSHOPTIONS $TARGET_USER@$IP "systemctl --user stop bhuman.service > /dev/null"
  else
    local RESTART=false
  fi

  if $DOWNLOAD; then
    echo "downloading log files..."

    SIZE=$(ssh $SSHOPTIONS $TARGET_USER@$IP "du $DUOPTIONS_LINUX $LOGPATH/*.log" | tail -n 1 | awk '{print $1}')

    # -p = preserve original date and time
    scp $SSHOPTIONS -p $TARGET_USER@$IP:$LOGPATH*.log "$LOCALPATH" >/dev/null &
    SCPPID=$!

    while true; do
      LC_ALL=C echo "downloaded: $(( LC_ALL=C du $DUOPTIONS "$LOCALPATH/"*.log 2>/dev/null ) | tail -n 1 | awk '{print $1}') / $SIZE"
      ps -p$SCPPID 2>&1 >/dev/null || break
      sleep 2
    done

    wait $SCPPID
    if [ $? -ne 0 ]; then
      echo >&2 "error: scp failed!"
      RETURN=1
      return
    fi
  fi

  if $DELETE; then
    echo "deleting log files from robot"
    ssh $SSHOPTIONS $TARGET_USER@$IP "rm -f $LOGPATH*"
  fi

  if $RESTART; then
    echo "starting bhuman"
    ssh $SSHOPTIONS $TARGET_USER@$IP "systemctl --user start bhuman.service > /dev/null"
  fi

  return 0
}

IPS=
NUMIPS=0
DOWNLOAD=true
DELETE=false
RETURN=0

# parse options
[[ $# -eq 0 ]] && usage
while true; do
  case $1 in
    "")
      break
      ;;
    "-d" | "/d")
      DELETE=true
      ;;
    "-D" | "/D" | "--just-delete")
      DELETE=true
      DOWNLOAD=false
      ;;
    "-h" | "/h" | "/?" | "--help")
      usage
      ;;
    -*)
      echo "error: unknown parameter: $1!" >&2
      usage
      ;;
    *)
      IPS[$NUMIPS]=$1
      let NUMIPS++
      ;;
  esac
  shift
done

source "$BASEPATH/setupSSH"

trap "trap - SIGTERM && kill -- -$$ 2>/dev/null" SIGINT SIGTERM

if [ $NUMIPS == 0 ]; then
  echo >&2 "error: no ip addresses specified!"
  usage
elif [ $NUMIPS == 1 ]; then
  download ${IPS[0]}
else
  for ((i=0; i < NUMIPS; i++)); do
    download ${IPS[i]} 2> >(sed "s%^%[${IPS[i]}] %" >&2) | sed "s%^%[${IPS[i]}] %" &
  done
  wait
fi

exit $RETURN
