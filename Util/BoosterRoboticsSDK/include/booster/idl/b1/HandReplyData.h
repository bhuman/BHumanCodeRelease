// Copyright 2016 Proyectos y Sistemas de Mantenimiento SL (eProsima).
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*!
 * @file HandReplyData.h
 * This header file contains the declaration of the described types in the IDL
 * file.
 *
 * This file was generated by the tool fastddsgen.
 */

#ifndef _FAST_DDS_GENERATED_BOOSTER_INTERFACE_MSG_HANDREPLYDATA_H_
#define _FAST_DDS_GENERATED_BOOSTER_INTERFACE_MSG_HANDREPLYDATA_H_

#include <array>
#include <bitset>
#include <cstdint>
#include <fastcdr/cdr/fixed_size_string.hpp>
#include <fastcdr/xcdr/external.hpp>
#include <fastcdr/xcdr/optional.hpp>
#include <map>
#include <string>
#include <vector>

// ------------------------------ Pub Sub Type Start
// ----------------------------
#include <fastdds/rtps/common/InstanceHandle.h>
#include <fastdds/rtps/common/SerializedPayload.h>
#include <fastrtps/utils/md5.h>

#include <fastdds/dds/core/policy/QosPolicies.hpp>
#include <fastdds/dds/topic/TopicDataType.hpp>

#if !defined(GEN_API_VER) || (GEN_API_VER != 2)
#error \
    Generated HandReplyData is not compatible with current installed Fast DDS. Please, regenerate it with fastddsgen.
#endif  // GEN_API_VER

// ------------------------------ Pub Sub Type End ----------------------------

#include "HandReplyParam.h"

#if defined(_WIN32)
#if defined(EPROSIMA_USER_DLL_EXPORT)
#define eProsima_user_DllExport __declspec(dllexport)
#else
#define eProsima_user_DllExport
#endif  // EPROSIMA_USER_DLL_EXPORT
#else
#define eProsima_user_DllExport
#endif  // _WIN32

#if defined(_WIN32)
#if defined(EPROSIMA_USER_DLL_EXPORT)
#if defined(HANDREPLYDATA_SOURCE)
#define HANDREPLYDATA_DllAPI __declspec(dllexport)
#else
#define HANDREPLYDATA_DllAPI __declspec(dllimport)
#endif  // HANDREPLYDATA_SOURCE
#else
#define HANDREPLYDATA_DllAPI
#endif  // EPROSIMA_USER_DLL_EXPORT
#else
#define HANDREPLYDATA_DllAPI
#endif  // _WIN32

namespace eprosima {
namespace fastcdr {
class Cdr;
class CdrSizeCalculator;
}  // namespace fastcdr
}  // namespace eprosima

namespace booster_interface {

namespace msg {

/*!
 * @brief This class represents the structure HandReplyData defined by the user
 * in the IDL file.
 * @ingroup HandReplyData
 */
class HandReplyData : public eprosima::fastdds::dds::TopicDataType {
 public:
  /*!
   * @brief Copy constructor.
   * @param x Reference to the object booster_interface::msg::HandReplyData that
   * will be copied.
   */
  eProsima_user_DllExport HandReplyData(const HandReplyData& x);

  /*!
   * @brief Move constructor.
   * @param x Reference to the object booster_interface::msg::HandReplyData that
   * will be copied.
   */
  eProsima_user_DllExport HandReplyData(HandReplyData&& x) noexcept;

  /*!
   * @brief Copy assignment.
   * @param x Reference to the object booster_interface::msg::HandReplyData that
   * will be copied.
   */
  eProsima_user_DllExport HandReplyData& operator=(const HandReplyData& x);

  /*!
   * @brief Move assignment.
   * @param x Reference to the object booster_interface::msg::HandReplyData that
   * will be copied.
   */
  eProsima_user_DllExport HandReplyData& operator=(HandReplyData&& x) noexcept;

  /*!
   * @brief Comparison operator.
   * @param x booster_interface::msg::HandReplyData object to compare.
   */
  eProsima_user_DllExport bool operator==(const HandReplyData& x) const;

  /*!
   * @brief Comparison operator.
   * @param x booster_interface::msg::HandReplyData object to compare.
   */
  eProsima_user_DllExport bool operator!=(const HandReplyData& x) const;

  /*!
   * @brief This function copies the value in member hand_data
   * @param _hand_data New value to be copied in member hand_data
   */
  eProsima_user_DllExport void hand_data(
      const std::vector<booster_interface::msg::HandReplyParam>& _hand_data);

  /*!
   * @brief This function moves the value in member hand_data
   * @param _hand_data New value to be moved in member hand_data
   */
  eProsima_user_DllExport void hand_data(
      std::vector<booster_interface::msg::HandReplyParam>&& _hand_data);

  /*!
   * @brief This function returns a constant reference to member hand_data
   * @return Constant reference to member hand_data
   */
  eProsima_user_DllExport const
      std::vector<booster_interface::msg::HandReplyParam>&
      hand_data() const;

  /*!
   * @brief This function returns a reference to member hand_data
   * @return Reference to member hand_data
   */
  eProsima_user_DllExport std::vector<booster_interface::msg::HandReplyParam>&
  hand_data();

  /*!
   * @brief This function sets a value in member hand_index
   * @param _hand_index New value for member hand_index
   */
  eProsima_user_DllExport void hand_index(int32_t _hand_index);

  /*!
   * @brief This function returns the value of member hand_index
   * @return Value of member hand_index
   */
  eProsima_user_DllExport int32_t hand_index() const;

  /*!
   * @brief This function returns a reference to member hand_index
   * @return Reference to member hand_index
   */
  eProsima_user_DllExport int32_t& hand_index();

  /*!
   * @brief This function sets a value in member hand_type
   * @param _hand_type New value for member hand_type
   */
  eProsima_user_DllExport void hand_type(int32_t _hand_type);

  /*!
   * @brief This function returns the value of member hand_type
   * @return Value of member hand_type
   */
  eProsima_user_DllExport int32_t hand_type() const;

  /*!
   * @brief This function returns a reference to member hand_type
   * @return Reference to member hand_type
   */
  eProsima_user_DllExport int32_t& hand_type();

 private:
  std::vector<booster_interface::msg::HandReplyParam> m_hand_data;
  int32_t m_hand_index{0};
  int32_t m_hand_type{0};

 public:
  typedef HandReplyData type;

  eProsima_user_DllExport HandReplyData();

  eProsima_user_DllExport ~HandReplyData() override;

  eProsima_user_DllExport bool serialize(
      void* data,
      eprosima::fastrtps::rtps::SerializedPayload_t* payload) override {
    return serialize(data, payload,
                     eprosima::fastdds::dds::DEFAULT_DATA_REPRESENTATION);
  }

  eProsima_user_DllExport bool serialize(
      void* data, eprosima::fastrtps::rtps::SerializedPayload_t* payload,
      eprosima::fastdds::dds::DataRepresentationId_t data_representation)
      override;

  eProsima_user_DllExport bool deserialize(
      eprosima::fastrtps::rtps::SerializedPayload_t* payload,
      void* data) override;

  eProsima_user_DllExport std::function<uint32_t()> getSerializedSizeProvider(
      void* data) override {
    return getSerializedSizeProvider(
        data, eprosima::fastdds::dds::DEFAULT_DATA_REPRESENTATION);
  }

  eProsima_user_DllExport std::function<uint32_t()> getSerializedSizeProvider(
      void* data,
      eprosima::fastdds::dds::DataRepresentationId_t data_representation)
      override;

  eProsima_user_DllExport bool getKey(
      void* data, eprosima::fastrtps::rtps::InstanceHandle_t* ihandle,
      bool force_md5 = false) override;

  eProsima_user_DllExport void* createData() override;

  eProsima_user_DllExport void deleteData(void* data) override;

#ifdef TOPIC_DATA_TYPE_API_HAS_IS_BOUNDED
  eProsima_user_DllExport inline bool is_bounded() const override {
    return false;
  }

#endif  // TOPIC_DATA_TYPE_API_HAS_IS_BOUNDED

#ifdef TOPIC_DATA_TYPE_API_HAS_IS_PLAIN
  eProsima_user_DllExport inline bool is_plain() const override {
    return false;
  }

  eProsima_user_DllExport inline bool is_plain(
      eprosima::fastdds::dds::DataRepresentationId_t data_representation)
      const override {
    static_cast<void>(data_representation);
    return false;
  }

#endif  // TOPIC_DATA_TYPE_API_HAS_IS_PLAIN

#ifdef TOPIC_DATA_TYPE_API_HAS_CONSTRUCT_SAMPLE
  eProsima_user_DllExport inline bool construct_sample(
      void* memory) const override {
    static_cast<void>(memory);
    return false;
  }

#endif  // TOPIC_DATA_TYPE_API_HAS_CONSTRUCT_SAMPLE

  MD5 m_md5;
  unsigned char* m_keyBuffer;
};

}  // namespace msg

}  // namespace booster_interface

#endif  // _FAST_DDS_GENERATED_BOOSTER_INTERFACE_MSG_HANDREPLYDATA_H_
